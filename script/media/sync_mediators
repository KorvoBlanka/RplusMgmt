#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::Bin/../../lib";

use Rplus::Modern;

use Rplus::Model::Realty;
use Rplus::Model::Realty::Manager;
use Rplus::Model::Mediator;
use Rplus::Model::Mediator::Manager;
use Rplus::Model::MediatorCompany;
use Rplus::Model::MediatorCompany::Manager;
use Rplus::Model::RuntimeParam;
use Rplus::Model::RuntimeParam::Manager;

use Rplus::Util::Config qw(get_config);
use Rplus::Util::Mediator qw(delete_mediator add_mediator);

use Mojo::UserAgent;

use JSON;
use Data::Dumper;

# синхронизация базы посредниклв клиента и буффера

run(get_config());

sub run {
    my $config = shift;

    my $ua = Mojo::UserAgent->new;

    my $realty_buffer_url = $config->{realty_buffer_url},;

    my $rt_param = Rplus::Model::RuntimeParam::Manager->get_objects(query => [key => 'sync_param'])->[0];
    if (!$rt_param) {
        $rt_param = Rplus::Model::RuntimeParam->new(key => 'sync_param', ts => 'now()')->save; # Create record
    }
    my $last_ts = $rt_param->ts;

    #if ($acc_data->{use_mediators_buffer}) {
        my $tx = $ua->get($realty_buffer_url . '/api/mediator/list_mediators_ex', form => {mode => 'new', ts => $last_ts});
        if (my $res = $tx->success) {
            my $med_list = $res->json->{list};
            for my $mediator (@$med_list) {
                say $mediator->{phone_num};
                add_mediator($mediator->{company_name}, $mediator->{phone_num}, 'buffer');
            }
        }
    #}

    $rt_param->ts('now');
    $rt_param->save(chages_only => 1);
}

1;
