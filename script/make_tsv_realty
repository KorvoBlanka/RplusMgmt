#!/usr/bin/env perl

use FindBin;
use lib "$FindBin::Bin/../lib";

use Rplus::Modern;
use Rplus::DB;

use Rplus::Model::Realty;
use Rplus::Model::Realty::Manager;

use List::MoreUtils qw{uniq};
use Data::Dumper;

my $dbh = Rplus::DB->new_or_cached->dbh;


say 'processing';
say build_tsv() . ' objects processed';

sub build_tsv {
    my $count = 0;
        my $realty_iter = Rplus::Model::Realty::Manager->get_objects_iterator(query => [delete_date => undef, '!state_code' => 'deleted']);
        while (my $realty = $realty_iter->next) {

            my $tag_str = '';
            my @tag_vector = ();

            if ($realty->address_object) {
                push @tag_vector, $realty->address_object->expanded_name;
                push @tag_vector, $realty->address_object->full_type;
                push @tag_vector, $realty->house_num if $realty->house_num;
            }

            push @tag_vector, $realty->type->keywords;
            push @tag_vector, $realty->ap_scheme->keywords if $realty->ap_scheme;
            push @tag_vector, $realty->balcony->keywords if $realty->balcony;
            push @tag_vector, $realty->bathroom->keywords if $realty->bathroom;
            push @tag_vector, $realty->condition->keywords if $realty->condition;
            push @tag_vector, $realty->house_type->keywords if $realty->house_type;
            push @tag_vector, $realty->room_scheme->keywords if $realty->room_scheme;

            push @tag_vector, $realty->source_media_text if $realty->source_media_text;
            push @tag_vector, $realty->work_info if $realty->work_info;
            push @tag_vector, $realty->description if $realty->description;


            $tag_str = join ' ', uniq @tag_vector;
            $tag_str =~ s/[[:punct:]]/ /g;


            say '_________________';
            say $tag_str;

            my $r_id = $realty->id;
            $dbh->do("UPDATE realty SET fts_vector = to_tsvector('russian', '" . $tag_str . "') WHERE id = $r_id;");
        }

    return $count;
}
