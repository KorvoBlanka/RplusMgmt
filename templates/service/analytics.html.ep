% layout 'default';

% use Rplus::Model::RealtyOfferType::Manager;

% content_for header => begin
%= css_once "$assets_url/typeahead.js/$typeaheadjs_ver/css/typeahead.js-bootstrap.css";
%= css_once "$assets_url/bootstrap-datepicker/css/datepicker3.css";
<style type="text/css">

  .tt-hint {
    height: 30px;
    padding: 5px 10px;
    font-size: 12px;
    line-height: 1.5;
    border-radius: 3px;
    color: #c0c0c0;
  }
</style>
% end

% content_for after_bootstrap => begin
%= js_once "$assets_url/typeahead.js/$typeaheadjs_ver/js/typeahead.js";
%= js_once "$assets_url/bootstrap-datepicker/js/bootstrap-datepicker.js";
%= js_once "https://www.gstatic.com/charts/loader.js";

% end

% content_for javascript => begin
<script type="text/javascript">
	$(function() {

      google.charts.load('current', {'packages':['scatter', 'bar', 'corechart']});
      google.charts.setOnLoadCallback(drawEmpty);

      $('.date-picker').datepicker();

      function drawEmpty() {
        var data = new google.visualization.DataTable();
        data.addColumn('number', '');
        data.addColumn('number', '');

        var options = {width: 900, height: 500,};

        var chart = new google.charts.Scatter(document.getElementById('pricePlot'));
        chart.draw(data, options);

        chart = new google.charts.Bar(document.getElementById('objectsPlot'));
        chart.draw(data, options);

        chart = new google.charts.Bar(document.getElementById('objectsPlot'));
        chart.draw(data, options);

        var chart = new google.charts.Bar(document.getElementById('tasksPlot'));
        chart.draw(data, options);
      }

      // Query completion
      $('#priceSearchQuery')
        .typeahead({
          name: 'priceSearch',
          valueKey: "value",
          limit: 10,
          remote: "/api/query/complete?q=%QUERY&limit=10",
        })
        .bind('typeahead:selected', function (e, obj) {
          draw1();
        })
        .bind('input', function (e) {
          if ($(this).val() == '') {
            draw1();
          }
        })
        .bind('keydown', function (e) {
          if (e.which == 13) {
            $('#priceSearchQuery').typeahead('close');
            draw1();
          }
        });

      function draw1() {
        var q = $('#priceSearchQuery').val();
        var offer_type_code = $('[data-filter="offer_type_code"]').data('val');

        var from_date_r = $('#priceDateFrom').val();
        var to_date_r = $('#priceDateTo').val();

        var from_date;
        var to_date;

        if (from_date_r) {
          from_date = moment(from_date_r, "DD-MM-YYYY").format();
        }

        if (to_date_r) {
          to_date = moment(to_date_r, "DD-MM-YYYY").format();
        }

        $.ajax({
          type: "POST",
          url: "/api/statistics/get_price_data",
          data: {q: q, offer_type_code: offer_type_code, from_date: from_date, to_date: to_date, object_count: 10000},
          complete: function () { }
        })
          .done(function (data, textStatus, jqXHR) {

            var pdata = new google.visualization.DataTable();
            pdata.addColumn('date', 'дата');
            pdata.addColumn('number', 'цена');

            var price_data = [];
            for (let e of data.list) {
              if (e.cost) {
                var d = new Date(e.add_date);
                price_data.push([new Date(e.add_date), e.cost * 1]);
              }
            }
            pdata.addRows(price_data);
            var options = {
              width: 800,
              height: 500,
              chart: {
                title: '',
                subtitle: ''
              },
              hAxis: {title: 'дата'},
              vAxis: {title: 'цена'}
            };

            var chart = new google.charts.Scatter(document.getElementById('pricePlot'));

            chart.draw(pdata, google.charts.Scatter.convertOptions(options));


          });

      }


      // ------------------------------------------------------------------------------------------------

      $('#objectsAgentInput').change(function() {
        draw2();
      });

      $('#objectsDateFrom').change(function() {
        draw2();
      });

      $('#objectsDateTo').change(function() {
        draw2();
      });

      function draw2() {
        var agent_id = $('#objectsAgentInput').val();
        var offer_type_code = $('[data-filter="offer_type_code"]').data('val');

        var from_date_r = $('#objectsDateFrom').val();
        var to_date_r = $('#objectsDateTo').val();

        var from_date;
        var to_date;

        if (from_date_r) {
          from_date = moment(from_date_r, "DD-MM-YYYY").format();
        }

        if (to_date_r) {
          to_date = moment(to_date_r, "DD-MM-YYYY").format();
        }

        $.ajax({
          type: "POST",
          url: "/api/statistics/get_agent_objects_data",
          data: {agent_id: agent_id, offer_type_code: offer_type_code,},
          complete: function () { }
        })
          .done(function (data, textStatus, jqXHR) {

            var obj_data = [["state", "кол-во объектов"]];
            for (let e of data.list) {
              obj_data.push([ e.state_code, e.count * 1 ])
            }

            var options = {
              width: 800,
              height: 500,
              chart: {
                title: '',
                subtitle: ''
              },
            };

            var chart = new google.charts.Bar(document.getElementById('objectsPlot'));

            chart.draw(google.visualization.arrayToDataTable(obj_data), google.charts.Bar.convertOptions(options));

          });
      }

      // ------------------------------------------------------------------------------------------------

      $('#tasksAgentInput').change(function() {
        draw3();
      });

      $('#tasksDateFrom').change(function() {
        draw3();
      });

      $('#tasksDateTo').change(function() {
        draw3();
      });

      function draw3() {
        var agent_id = $('#tasksAgentInput').val();

        var from_date_r = $('#tasksDateFrom').val();
        var to_date_r = $('#tasksDateTo').val();

        var from_date;
        var to_date;

        if (from_date_r) {
          from_date = moment(from_date_r, "DD-MM-YYYY").format();
        }

        if (to_date_r) {
          to_date = moment(to_date_r, "DD-MM-YYYY").format();
        }

        $.ajax({
          type: "POST",
          url: "/api/statistics/get_agent_tasks_data",
          data: {agent_id: agent_id, from_date: from_date, to_date: to_date},
          complete: function () { }
        })
          .done(function (data, textStatus, jqXHR) {

            var task_data = [["тип задачи", "всего", "выполнено"],];

            for (let e of data.list) {
              task_data.push([ e.task_name, e.assigned_count * 1, e.done_count * 1 ])
            }

            var options = {
              width: 800,
              height: 500,
              chart: {
                title: '',
                subtitle: ''
              },
              bars: 'horizontal', // Required for Material Bar Charts.
              axes: {
                x: {
                  0: { side: 'top', label: '',} // Top x-axis.
                }
              },
              hAxis: {
                format: '#'
              }
            };

            var chart = new google.charts.Bar(document.getElementById('tasksPlot'));

            chart.draw(google.visualization.arrayToDataTable(task_data), google.charts.Bar.convertOptions(options));




            var pie_data = [["Задача", "Кол-во"],]
            for (let e of data.list) {
              pie_data.push([ e.task_name, e.assigned_count * 1 ])
            }

            var pie_options = {
              width: 900,
              height: 500,
              is3D: true,
              title: ''
            };

            var chart = new google.visualization.PieChart(document.getElementById('tasksPiePlot'));

            chart.draw(google.visualization.arrayToDataTable(pie_data), pie_options);

          });
      }
	});
</script>
% end


<div class="row">
  <h3>Анализ цен</h3>
</div>

<div class="row">
  <div class="col-md-8 col-lg-8">
    <div class="form-group">
      <input type="text" class="form-control input-sm" id="priceSearchQuery" name="priceSearch" placeholder="<%= ucfloc 'search' %>" autocomplete="off" x-webkit-speech>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-lg-4 col-md-4">
    <div class="input-group input-large date-picker input-daterange" data-date="10-10-2010" data-date-format="dd-mm-yyyy">
      <input type="text" class="form-control" id="priceDateFrom" placeholder="01-01-2016">
      <span class="input-group-addon"> - </span>
      <input type="text" class="form-control" id="priceDateTo" placeholder="01-01-2016">
    </div>
  </div>
</div>

<br>

<div class="row">
  <div class="col-lg-12 col-md-12">
		<div id="pricePlot" style="width: 900px; height: 500px;">
		</div>
  </div>
</div>

<hr>

<div class="row">
  <h3>Стадии</h3>
</div>

<div class="row">
  <div class="col-md-4 col-lg-4">
    <div class="form-group">
      <select class="form-control input-sm" name="agent_id" id="objectsAgentInput">
        % if ($self->stash('user')->{role} eq 'top') {
        <option class="text-muted" value="">-</option>
        <option class="" value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        % for my $x (@{Rplus::Model::User::Manager->get_objects(select => 'id, name', query => [account_id => $self->session('account')->{id}, role => ['agent', 'manager'], delete_date => undef], sort_by => 'name')}) {
        <option value="<%= $x->id %>"><%= $x->name %></option>
        % }
        % } elsif ($self->stash('user')->{role} eq 'manager') {
        <option value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        %   if (scalar (@{$self->stash('user')->{subordinate}})) {
        %     for my $x (@{Rplus::Model::User::Manager->get_objects(select => 'id, name', query => [account_id => $self->session('account')->{id}, id => $self->stash('user')->{subordinate}, delete_date => undef], sort_by => 'name')}) {
                <option value="<%= $x->id %>"><%= $x->name %></option>
        %     }
        %   }
        % } elsif ($self->stash('user')->{role} eq 'agent') {
        <option value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        % } else {

        % }
      </select>
    </div>
  </div>
</div>


<div class="row">
  <div class="col-lg-12 col-md-12">
		<div id="objectsPlot" style="width: 900px; height: 500px;">
		</div>
  </div>
</div>

<hr>

<div class="row">
  <h3>Задачи</h3>
</div>

<div class="row">
  <div class="col-md-4 col-lg-4">
    <div class="form-group">
      <select class="form-control input-sm" name="agent_id" id="tasksAgentInput">
        % if ($self->stash('user')->{role} eq 'top') {
        <option class="text-muted" value="">-</option>
        <option class="" value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        % for my $x (@{Rplus::Model::User::Manager->get_objects(select => 'id, name', query => [account_id => $self->session('account')->{id}, role => ['agent', 'manager'], delete_date => undef], sort_by => 'name')}) {
        <option value="<%= $x->id %>"><%= $x->name %></option>
        % }
        % } elsif ($self->stash('user')->{role} eq 'manager') {
        <option value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        %   if (scalar (@{$self->stash('user')->{subordinate}})) {
        %     for my $x (@{Rplus::Model::User::Manager->get_objects(select => 'id, name', query => [account_id => $self->session('account')->{id}, id => $self->stash('user')->{subordinate}, delete_date => undef], sort_by => 'name')}) {
                <option value="<%= $x->id %>"><%= $x->name %></option>
        %     }
        %   }
        % } elsif ($self->stash('user')->{role} eq 'agent') {
        <option value="<%= $self->stash('user')->{id} %>"><%= $self->stash('user')->{name} %></option>
        % } else {

        % }
      </select>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-lg-4 col-md-4">
    <div class="input-group input-large date-picker input-daterange" data-date="10-10-2010" data-date-format="dd-mm-yyyy">
      <input type="text" class="form-control" id="tasksDateFrom" placeholder="01-01-2016">
      <span class="input-group-addon"> - </span>
      <input type="text" class="form-control" id="tasksDateTo" placeholder="01-01-2016">
    </div>
  </div>
</div>

<br>

<div class="row">
  <div class="col-lg-8 col-md-8">
		<div id="tasksPlot" style="width: 900px; height: 500px;">
		</div>
  </div>
</div>

<div class="row">
  <div class="col-lg-12 col-md-12">
		<div id="tasksPiePlot" style="width: 900px; height: 500px;">
		</div>
  </div>
</div>

<div style="height: 100px;">
</div>


<nav class="navbar navbar-default navbar-fixed-bottom">
  <div class="container">
    <div class="navbar-right">
      <ul class="nav navbar-nav">
        <!-- Offer type filter -->
        <li class="dropdown" data-filter="offer_type_code" data-val="sale">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span role="display"><%= ucfloc 'sale' %></span> <b class="caret"></b></a>
          <ul class="dropdown-menu">
            % for my $x (@{Rplus::Model::RealtyOfferType::Manager->get_objects(sort_by => 'id')}) {
              <li><a href="#" data-val="<%= $x->code %>"><%= $x->name %></a></li>
            % }
          </ul>
        </li>
      </ul>
      <p class="navbar-text">
        <span class="glyphicon glyphicon-refresh animation-rotate invisible indicator-ajax"></span>
      </p>
    </div>
  </div>
</nav>
