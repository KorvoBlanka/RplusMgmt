% use JSON;

<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title><%= &title || 'RplusMgmt' %></title>
    <!--meta name="viewport" content="width=device-width, initial-scale=1.0"-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <meta name="description" content="Rplus Management">
    <meta name="author" content="Alexander Borisenko">

    <meta name = "description" content = "" />
    <meta name = "keywords" content = "" />
    <meta name = "robots" content = "noindex,nofollow" />

    <!-- Bootstrap -->
    <link rel="stylesheet" href="<%= $assets_url %>/bootstrap/<%= $bootstrap_ver %>/css/bootstrap.min.css">
    <!-- Pines Notify -->
    <link rel="stylesheet" href="<%= $assets_url %>/pnotify/1.2.2/jquery.pnotify.default.css">

    <style type="text/css">

      .quarter-circle-top-left {
        width: 65px;
        height: 65px;
        border-radius: 65px 0 0 0;
        -moz-border-radius: 65px 0 0 0;
        -webkit-border-radius: 65px 0 0 0;
      }
      .quarter-circle-top-right {
        width: 65px;
        height: 65px;
        border-radius: 0 65px 0 0;
        -moz-border-radius: 0 65px 0 0;
        -webkit-border-radius: 0 65px 0 0;
      }
      .quarter-circle-bottom-left {
        width: 65px;
        height: 65px;
        border-radius: 0 0 0 65px;
        -moz-border-radius: 0 0 0 65px;
        -webkit-border-radius: 0 0 0 65px;
      }
      .quarter-circle-bottom-right {
        width: 65px;
        height: 65px;
        border-radius: 0 0 65px 0;
        -moz-border-radius: 0 0 65px 0;
        -webkit-border-radius: 0 0 65px 0;
      }

      .phone-button {
        background: #aaa;
        text-align: center;
        -webkit-transition: all .2s ease-in-out;
      }

      .answer-button {
        background-color: rgba(0, 170, 0, 0.70);
      }

      % if ($self->req->headers->user_agent !~ /Android/) {
      .answer-button:hover {
        background-color: rgba(25, 214, 25, 0.70);
        -webkit-transform: scale(1.01);
      }
      % }

      .showphone-button {
        background-color: rgba(165, 165, 165, 0.55)
      }

      % if ($self->req->headers->user_agent !~ /Android/) {
      .showphone-button:hover {
        background-color: rgba(190, 190, 190, 0.55);
        -webkit-transform: scale(1.01);
      }
      % }

      .reject-button {
        background-color: rgba(190, 20, 20, 0.70);
      }

      % if ($self->req->headers->user_agent !~ /Android/) {
      .reject-button:hover {
        background-color: rgba(210, 70, 70, 0.70);
        -webkit-transform: scale(1.01);
      }
      % }

      .disabled-button {
        background-color: rgba(165, 165, 165, 0.55);
      }

      % if ($self->req->headers->user_agent !~ /Android/) {
      .disabled-button:hover {
        background-color: rgba(190, 190, 190, 0.55);
        -webkit-transform: scale(1.01);
      }
      % }

      #user-pic {
        position: absolute;
        top: 20px;
        left: 20px;
      }

      @-webkit-keyframes ring0 {
        0%, 100% {
          -webkit-transform: rotate(0deg);
        }
        20% {
          -webkit-transform: rotate(12deg);
        }
        40% {
          -webkit-transform: rotate(-12deg);
        }
        60% {
          -webkit-transform: rotate(12deg);
        }
        80% {
          -webkit-transform: rotate(-12deg);
        }
      }

      @-webkit-keyframes ring1 {
        0%, 100% {
          -webkit-transform: scale(1);
        }
        50% {
          -webkit-transform: scale(1.1);
        }
      }

      .callin {
        -webkit-animation: ring0 0.5s infinite;
      }

      .phone-screen {
        height: 600px;
        width: 900px;
        overflow: hidden;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -300px;
        margin-left: -450px;
        background-color: rgba(0,0,0, 0.7);
        z-index: 1100;
        box-shadow: 0 22px 70px 4px rgba(0,0,0,.6), 0 0 0 1px rgba(0, 0, 0, 0.1);
      }

      .lightup-answer {
        color: rgba(1, 199, 1, 1.0) !important;
      }

      .lightup-reject {
        color: rgba(214, 0, 0, 0.55) !important;
      }

      .calllist-selector {
        padding: 0px;
        margin: 0px;

        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -67px;
        margin-left: -415px;
        height: 35px;
        width: 320px;
      }

      .calllist-selector-button {
        cursor: pointer;
        border-radius: 15px;
      }

      .calllist-selector-button.active {
        background-color: rgba(255,255,255,0.20);
        color: #eee;
      }

      .calllist-selector-button:hover {
        background-color: rgba(255,255,255,0.16);
      }

      .calllist-wrapper {
        padding: 0px;
        margin: 0px;

        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -30px;
        margin-left: -415px;
        z-index: 500;
        height: 320px;
        overflow-y: scroll;
        -webkit-overflow-scrolling: touch;  /* iOS native style momentum scrolling */
      }

      .calllist {
        width: 320px;
        color: #fff;
        text-align: left;
        font-size: 28px;
        font-weight: 100;
      }

      .calllist-record {
        padding: 3px;
        /*border-bottom: 1px solid rgba(255,255,255,0.15);*/
        cursor: pointer;
      }

      .calllist-record:hover {
        background-color: rgba(255,255,255,0.40) !important;
      }

      .numpad {
        padding: 0px;
        margin: 0px;
        color: #fff;
        text-align: center;
        font-size: 28px;
        font-weight: 100;

        width: 260px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -30px;
        margin-left: 155px;
        z-index: 500;
      }

      .numpad tr > td {
        padding: 0px;
        margin: 0px;
        /*width: 64px;
        height: 32px;*/
      }

      .numpad tr > td > div {
        padding: 0px;
        margin: 12px 18px;
        margin-left: 0px;
        margin-bottom: 0px;
        background-color: rgba(255,255,255,0.05);
      }

      % if ($self->req->headers->user_agent !~ /Android/) {
        .numpad tr > td > div:hover {
          -webkit-transform: scale(1.02);
          background-color: rgba(255,255,255,0.20);
        }
      % }

      .numpad tr > td > div:active {
        -webkit-transform: scale(0.96);
      }

      .numpad-key {
        -webkit-transition: all .08s;
        cursor: pointer;

        border-radius: 50% !important;
        border: 1px double #888;

        height: 60px;
        width: 60px;
        line-height: 60px;

        padding: 0px;
        margin: 0px;

        font-family: "Helvetica Neue",Helvetica,Arial,sans-serif !important;

        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
      }

      .numpad-key:active {
        /*-webkit-transform: scale(0.92);*/
        background-color: rgba(255,255,255,0.40) !important;
      }
    </style>

    <style type="text/css">
      body {
        padding-top: 70px;
        padding-bottom: 50px;
      }

      .margin-bottom-10 {
        margin-bottom: 10px;
      }

      .margin-bottom-15 {
        margin-bottom: 15px;
      }

      .margin-bottom-20 {
        margin-bottom: 20px;
      }

      textarea {
        max-width: 100%;
      }

      .list-group.list-compact > .list-group-item {
        padding-top: 5px ;
        padding-bottom: 5px;
        border-left: 0;
        border-right: 0;
        border-radius: 0;
      }

      .list-group.list-compact > .list-group-item:first-of-type {
        border-top: 0;
      }

      .list-group.list-compact > .list-group-item:last-of-type {
        border-bottom: 0;
      }

      .well-md {
        padding: 15px;
        margin-bottom: 15px;
      }

      .panel-md {
        margin-bottom: 15px;
      }

      .panel-sm {
        margin-bottom: 15px;
      }

      .panel-sm .panel-body {
        padding: 9px;
      }

      .form-group-sm {
        margin-bottom: 10px;
      }

      .nav-sm > li > a {
        padding: 8px 12px;
      }

      .hr-sm {
        margin-top: 10px;
        margin-bottom: 10px;
      }

      % if ($self->req->headers->user_agent =~ /Windows/) {
        ::-webkit-scrollbar {
          width: 5px;
        }

        ::-webkit-scrollbar-track {
          margin: 2px;
          /* set the style/colour of the scroll bar background */
          background:
          -webkit-gradient(
            linear,
            0 0,
            100% 0,
            from(rgba(0,0,0,0.2)),
            to(rgba(0,0,0,0.12))
          );
          -webkit-box-shadow: 0 1px 0 0 rgba(255,255,255,0.35);
          -webkit-border-radius: 5px;
        }

        ::-webkit-scrollbar-thumb {
          /* this is the acutal scrooll bar, set the colours here to match your site */
          /* I have used grey's (#464646 & #383838 & #cccccc) */
          background: rgba(0,0,0,.5);
          -webkit-border-radius: 6px;
          -webkit-background-clip: padding-box;
        }
      % }

      .animation-rotate {
        -webkit-animation: spin 2s infinite linear;
                animation: spin 2s infinite linear;
      }

      @-webkit-keyframes spin {
        0% {
          -webkit-transform: rotate(0deg);
        }
        100% {
          -webkit-transform: rotate(359deg);
        }
      }

      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(359deg);
        }
      }

      .geo-map {
        cursor: default !important;
      }

      .geo-map:active {
        cursor: -webkit-grab !important;
      }

      .disable-on-ajax.disabled {
        /*opacity: 0.5;*/
        pointer-events: none;
      }

      .disable-on-move-resize.disabled {
        pointer-events: none;
      }

      .ui-pnotify.stack-bottomright {
        /* These are just CSS default values to reset the pnotify CSS. */
        right: auto;
        top: auto;
      }

      .help-window {
        position: absolute;
        top: 50%;
        left: 50%;
        height: 600px;
        width: 800px;
        margin-top: -300px;
        margin-left: -400px;
        z-index: 9000;

        background-color: #eee;
      }

      .navbar-inverse {
        /*background-color: #001F3C;*/
        background-color: #062141;
        border-color: #003242;
      }

      .navbar-inverse .navbar-nav > .active > a, .navbar-inverse .navbar-nav > .active > a:hover {
        background-color: #00305E;
      }

      .navbar-inverse .navbar-nav > .open > a, .navbar-inverse .navbar-nav > .open > a:hover, .navbar-inverse .navbar-nav > .open > a:focus {
        background-color: #00305E;
      }

      .navbar-inverse .navbar-nav > li > a {
        color: #ddd;
      }

      .navbar-inverse .navbar-brand {
        color: #929292;
      }

      .quick-notifier {
        position: absolute;
        top: 2px;
        right: 2px;
        background-color: rgb(255, 41, 0);
        z-index: 1;
        font-weight: 400;
      }

      .modal-header {
        background-color: #eaeaea;
      }

      .modal-content {
        border-radius: 0px;
      }

      .modal-body {
        overflow-y: scroll;
        overflow-x: hidden;
        -webkit-overflow-scrolling: touch;

        padding: 15px;
        border-radius: 0px;
      }

    </style>

    <style type="text/css">
        .chat-screen {
            min-height: 380px;
            min-width: 680px;
            height: 428px;
            width: 900px;
            position: fixed;
            top: 50%;
            left: 50%;
            margin-top: -200px;
            margin-left: -450px;
            /*background-color: rgba(6, 33, 65, 0.85);*/
            border-radius: 5px;
            box-shadow: inset 0 1px 0 rgba(255,255,255,.6), 0 22px 70px 4px rgba(0,0,0,.6), 0 0 0 1px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            /*z-index: 1100;*/
        }

        .chat-header {
            width: 100%;
            height: 34px;
            text-align: center;
            background-color: #f0f0f0;
        }

        .chat-body {
            height: 360px;
        }

        .chat-footer {
            width: 100%;
            height: 34px;
            background-color: #f0f0f0;
        }

        .chat-caption {
            color: #666;
            line-height: 34px;
        }

        .chat-contactlist {
            float: left;
            width: 260px;
            height: 100%;

            overflow: auto;
            overflow-y: scroll;
            -webkit-overflow-scrolling: touch;  /* iOS native style momentum scrolling */

            border-right: 1px solid #666;
            background-color: #edecef;
        }

        .chat-messagelist {
            float: right;
            width: 640px;
            height: 100%;
            background-color: #fff;

            overflow: auto;
            overflow-y: scroll;
            -webkit-overflow-scrolling: touch;  /* iOS native style momentum scrolling */
        }

        .chat-message-block {

        }

        .chat-message {
            min-width: 120px;
            max-width: 90%;
            /*border: 1px solid rgba(90,90,90,1.0);*/
            /*box-shadow: 0 0 10px rgba(0,0,0,0.5);*/
            border-radius: 15px;
            margin: 0px 10px 10px 10px;
            display: inline-block;
            position: relative;
            word-wrap: break-word;
        }

        .message-right {
            float: right;
            background-color: #ace44b;
        }

        .message-left {
            float: left;
            background-color: #38a9fa;
        }

        .chat-message:before, .chat-message:after {
            content: "";
            height: 0px;
            width: 0px;
            display: inline-block;
            position: absolute;
            border-radius: 20px / 10px;
        }


        .message-right:before {
            /*border: 10px solid transparent;
            border-bottom-color: rgba(90,90,90,1.0);
            bottom: 0;
            right: -9px;
            z-index: -2;*/
        }

        .message-right:after {
            border: 8px solid transparent;
            border-bottom-color: #ace44b;
            bottom: 1px;
            right: -7px;
        }

        .message-left:before {
            /*border: 10px solid transparent;
            border-bottom-color: rgba(90,90,90,1.0);
            bottom: 0;
            left: -9px;
            z-index: -2;*/
        }

        .message-left:after {
            border: 8px solid transparent;
            border-bottom-color: #38a9fa;
            bottom: 1px;
            left: -7px;
        }

        .message-ts {
            color: #ABABAB;
            margin-left: 6px;
            font-size: 12px;
        }

        .message-text {
            color: #fff;
            margin: 5px;
        }

        .message-right > .message-text {
            color: #494949;
        }

        .message-sender {
            display: inline-block;
            float: left;
            padding: 5px 5px 0px 5px;
            color: #75757B;
            width: 100%;
            text-align: center;
        }

        .search-input {
            position: absolute;
            left: 3px;
            top: 3px;
            width: 250px;
        }

        .chat-input {
            background-color: #fff;
            border: 1px solid #848484;
            border-radius: 12px;
            color: #666;
            padding-left: 8px;
            padding-right: 22px;
            margin-top: 2px;
        }

        .chat-contactlist-switch {
            width: 25%;
            display: inline-block;
        }

        .chat-contactlist-switch-button {
            width: 49%;
            display: inline-block;
            text-align: center;
            cursor: pointer;
        }

        .chat-contactlist-switch-text {
            color: #666;
            line-height: 28px;
            padding: 3px;
        }

        .button-active > span {
            /*border: 1px solid #666;
            border-radius: 12px;*/
            color: rgba(50,50,150,1.0);
            text-decoration: underline;
        }

        .chat-contact {
            min-height: 72px;
            margin: 5px;
            color: #747474;
            position: relative;
        }

        .contact-active.chat-contact {
            color: #D2D2D2;
        }

        .contact-img-wrapper {
            display: inline-block;
            float: left;
        }

        .contact-info-wrapper {
            display: inline-block;
            width: 170px;
            float: left;
            margin: 5px;
        }

        .chat-contact-overlay {
            position: absolute;
            height: 100%;
            width: 100%;
            background-color: rgba(0,0,0,0.1);
            opacity: 0;
        }

        .chat-contact-overlay:hover {
            opacity: 1;
        }

        .contact-active {
            background-color: rgba(50,50,150,1.0);
        }

        .contact-state {
            width: 2px;
            height: 100%;
            /* border: 1px solid #eee; */
            /* border-radius: 50%; */
            position: absolute;
            top: 0px;
            right: 0px;
        }

        .state-online {
            background-color: #0f0;
        }

        .state-offline {
            background-color: #eee;
        }

        .unread-count {
            position: absolute;
            right: 5px;
            top: 46px;
            width: 19px;
            height: 19px;
            border-radius: 50%;
            background-color: #f00;
            text-align: center;
            line-height: 18px;
            color: #eee;
        }

        .file_upload{
            position: relative;
            overflow: hidden;
        }

        .file_upload input[type=file]{
            position: absolute;
            top: 0;
            opacity: 0
        }

        .chat-handler {
            position: absolute;
            top: 0px;
            right: 0px;
            border-left: 20px solid transparent;
            /* border-right: 20px solid transparent; */
            border-top: 20px solid #f00;
        }

        .chat-show {
            color: #ddd;
        }

        .chat-show:focus {
            color: #ddd;
        }

        .chat-show:active {
            color: #ddd;
        }

        .chat-show:hover {
            color: #fff;
        }

        .footer-element {
            display: inline-block;
            float: left;
        }

        .disable-selection {
            -webkit-user-select: none;
            user-select: none;
        }

        .chat-button {
            color: #666;
            cursor: pointer;
        }

        .chat-button:hover {
            color: #aaa;
        }

        .dz-preview {
            display: none;
        }

        .chat-screen input:focus {
            outline: 0;
        }

        .contact-not-found {
            width: 100%;
            margin-top: 50px;
            text-align: center;
            color: #aaa;
        }

        .message-file-attachment {
            color: #eee;
        }

        @media screen and (max-width: 1025px) {
            .hide-if-small {
                display: none !important;
            }
            .navbar-right {
                margin-top: 0px;
                margin-bottom: 0;
            }
            .margin-fix {
              margin-top: 7px;
            }
        }

        @media screen and (min-width: 1025px) {
            .hide-if-big {
                display: none !important;
            }
        }

        .navbar .divider-vertical {
          top: 5px;
          height: 40px;
          margin: 0 9px;
          border-right: 1px double #ffffff;
          border-left: 1px solid #E0E0E0;
        }

    </style>

    <%= content_for 'header' %>
  </head>
  <body>

    <div class="chat-bg hidden" style="position: fixed; height: 100%; width: 100%; z-index: 1100;">
    <div class="chat-screen" id="chatScreen">
        <div class="chat-header">
            <div style="width: 260px; height: 34px; display: inline-block; float: left; border-right: 1px solid #666;">
                <input type="text" class="chat-input search-input" id="chatSearchInput"></input>
                <span class="glyphicon glyphicon-search chat-button" style="position: absolute; top: 9px; left: 230px;" data-action="chat-search"></span>
            </div>
            <span class="chat-caption" id="chatCaption"></span>
            <div class="chat-handler">
            </div>
        </div>
        <div class="chat-body">
            <div class="chat-contactlist" id="chatContactList">
            </div>
            <div class="chat-messagelist" id="chatMessageList">
            </div>
        </div>
        <div class="chat-footer">

            <div class="footer-element" style="width: 260px; height: 100%; border-right: 1px solid #666;">
              <div class="button-active" style="display: inline-block; width: 49%; text-align: center; cursor: pointer;" data-action="chat-switch-mycontacts" id="chatMycontacts">
                <span class="chat-contactlist-switch-text">Переписка</span>
              </div>
              <div class="" style="display: inline-block; width: 49%; text-align: center;  cursor: pointer;" data-action="chat-switch-search" id="chatSearch">
                <span class="chat-contactlist-switch-text">Поиск</span>
              </div>
            </div>

            <div class="footer-element" style="position: relative; margin-left: 8px;">
              <input type="text" class="chat-input" style="width: 600px; margin-top: 5px;" id="chatInput"></input>
              <span class="glyphicon glyphicon-send chat-button" style="position: absolute; top: 9px; right: 7px" data-action="chat-send-message"></span>
            </div>

            <div class="footer-element" style="position: relative; float: right;height: 100%; width: 28px;">
              <span class="glyphicon glyphicon-paperclip chat-button" style="position: absolute; top: 9px; right: 9px" data-action="chat-send-file"></span>
              <form class="hidden" enctype="multipart/form-data" id="fileForm">
                <input class="chat-button" type="file" name="file" id="chatFileInput">
              </form>
            </div>
        </div>
    </div>
    </div>

  <div class="phone-screen hidden" style="">

    <table style="width:127px; position: fixed; top: 50%; left: 50%; margin-top: -67px; margin-left: -67px; z-index: 500;">
      <tr>
        <td>
          <div id="answer-button" class="quarter-circle-top-left phone-button answer-button disabled-button" data-action="call-answer">
            <span class="glyphicon glyphicon glyphicon-earphone" style="line-height: 65px; font-size: 24px; color: #fff; margin-top: 5px; margin-left: 15px;"></span>
          </div>
        </td>
        <td>
          <div id="reject-button" class="quarter-circle-top-right phone-button reject-button disabled-button" data-action="call-reject">
            <span class="glyphicon glyphicon glyphicon-phone-alt" style="line-height: 65px; font-size: 24px; color: #fff; margin-top: 5px; margin-right: 15px;"></span>
          </div>
        </td>
      </tr>
      </tr>
        <td>
          <div class="quarter-circle-bottom-left phone-button disabled-button" style="">
          </div>
        </td>
        <td>
          <div id="show-phone-button" class="quarter-circle-bottom-right phone-button showphone-button" data-action="phone-show" style="">
            <span class="glyphicon glyphicon glyphicon-th-list hidden" style="line-height: 65px; font-size: 24px; color: #fff; margin-top: -5px; margin-left: -15px;"></span>
          </div>
        </td>
      </tr>
    </table>

    <audio id="ringSound">
      <source src="<%= $assets_url %>/sound/telefono.wav"></source>
    </audio>
    <div class="hidden" id="user-pic">
      <img src="" style="width: 160px; height: 160px;">
    </div>
    <div id="" style="width: 200px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: 270px;
        margin-left: 260px;
        z-index: 500;
        text-align: center;">
      <p style="font-size: 14px; color: #bbb; font-weight: 100;letter-spacing: 1px;">
        % my $user = Rplus::Model::User::Manager->get_objects(query => [id => $self->stash('user')->{id}, delete_date => undef])->[0];
        % my $sip = from_json($user->ip_telephony);
        <%= $sip->{sip_login} %>@<%= $sip->{sip_host} %>
      </p>
    </div>
    <div id="" style="width: 500px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -215px;
        margin-left: -250px;
        z-index: 500;
        text-align: center;">
      <p style="font-size: 36px; color: #fff; font-weight: 100;letter-spacing: 1px;">
        <span id="callerNumber" data-phone_num=""></span>
        <span id="callerNumberBackspace" class="numpad-key" data-action="backspace" style="position: absolute; right: 0px; top: 0px; line-height: 52px;"><</span>
      </p>
    </div>
    <div id="" style="width: 700px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -155px;
        margin-left: -350px;
        z-index: 500;
        text-align: center;">
      <p id="callerName" style="font-size: 28px; color: #fff; font-weight: 100;letter-spacing: 1px;"></p>
    </div>
    <div id="" style="width: 700px;
        position: fixed;
        top: 50%;
        left: 50%;
        margin-top: -110px;
        margin-left: -350px;
        z-index: 500;
        text-align: center;">
      <p id="call-time" style="font-size: 28px; color: #fff; font-weight: 100;letter-spacing: 1px;"></p>
    </div>

    <div class="calllist-selector" style="padding: 3px; color: #c5c5c5; text-align: center; line-height: 27px;">
      <div style="height: 100%; border: 1px solid #c5c5c5; border-radius: 15px;">
        <div class="calllist-selector-button active" data-action="calllist-select" data-val="ANY" style="height: 100%; width: 50%; float: left; border-right: 1px solid #c5c5c5; border-radius: 0px; border-top-left-radius: 15px; border-bottom-left-radius: 15px;">
          Все
        </div>
        <div class="calllist-selector-button" data-action="calllist-select" data-val="MISSED" style="height: 100%; width: 50%; float: right; border-radius: 0px; border-top-right-radius: 15px; border-bottom-right-radius: 15px;">
          Пропущенные
        </div>
      </div>
    </div>
    <div class="calllist-wrapper" style="">
      <table class="calllist" style="">
        <tbody>
        </tbody>
      </table>
    </div>

    <table class="numpad" style="">
      <tr>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="1">
            1
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="2">
            2
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="3">
            3
          </div>
        </td>
      </tr>
      <tr>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="4">
            4
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="5">
            5
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="6">
            6
          </div>
        </td>
      </tr>
      <tr>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="7">
            7
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="8">
            8
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="9">
            9
          </div>
        </td>
      </tr>
      <tr>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="*">
            *
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="0">
            0
          </div>
        </td>
        <td>
          <div class="numpad-key" data-action="numpad-click" data-key="#">
            #
          </div>
        </td>
      </tr>
    </table>
  </div>

  <div class="indicator-ajax invisible" style="position: absolute; top: 50%; left: 50%; margin-top: -20px; margin-left: -20px; z-index: 1000;">
    <div style="background-color: #fff; border-radius: 50%;">
      <img style="width: 40px;" src="<%= $assets_url%>/img/loading_blue.gif">
    </div>
  </div>
    <!-- Navbar -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <div class="container">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-top-collapse">
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
          </button>
          <a href="/" class="navbar-brand hide-if-small">RplusMgmt</a>
        </div>

        <div class="collapse navbar-collapse navbar-top-collapse">
          <ul class="nav navbar-nav">
          % if (!is_hidden_nav('planner')) {
            <li class="<%= $controller eq 'planner' && 'active' %>"><span id="task-count-notifier" class="badge badge-default quick-notifier hidden"></span><a href="/planner"><span class="glyphicon glyphicon-list-alt"></span> Ежедневник</a></li>
          % }
          % if (has_permission(realty => 'read') && !is_hidden_nav('search')) {
            <li class="<%= $controller eq 'search' && 'active' %> hide-if-small"><a href="/search"><span class="glyphicon glyphicon-earphone"></span> Call-центр</a></li>
          % }
          % if (has_permission(realty => 'read') && !is_hidden_nav('realty')) {
            <li class="<%= $controller eq 'realty' && 'active' %>"><a href="/realty"><span class="glyphicon glyphicon-home"></span> Предложения</a></li>
          % }
          % if (has_permission(clients => 'read') && !is_hidden_nav('clients')) {
            <li class="<%= $controller eq 'clients' && 'active' %>"><span id="client-count-notifier" class="badge badge-default quick-notifier hidden"></span><a href="/clients"><span class="glyphicon glyphicon-user"></span> Заявки</a></li>
          % }
          % if (has_permission(realty => 'export') || has_permission(realty => 'analyse')) {
            <li class="dropdown <%= $controller eq 'service' && 'active' %>">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-star"></span> <%= ucfloc q{services} %> <b class="caret"></b></a>
              <ul class="dropdown-menu">
              % if (has_permission(realty => 'export')) {
                <li><a href="/service/export"><span class="glyphicon glyphicon-export"></span> <%= ucfloc q{advertisement} %></a></li>
              % }
              % if(has_permission(realty => 'analyse')) {
                <li><a href="/service/analytics"><span class="glyphicon glyphicon-list-alt"></span> <%= ucfloc q{analytics} %></a></li>
              % }
              </ul>
            </li>
          % }
          % if (
          %  (has_permission(mediators => 'read') || has_permission(landmarks => 'read') || has_permission(users => 'manage'))
          % ) {
            <li class="dropdown <%= $controller eq 'configuration' && 'active' %>">
              <a href="#" class="dropdown-toggle" data-toggle="dropdown"><span class="glyphicon glyphicon-cog"></span> <b class="caret"></b></a>
              <ul class="dropdown-menu">
              % if (has_permission(mediators => 'read')) {
                <li><a href="/configuration/mediators"><span class="glyphicon glyphicon-ban-circle"></span> <%= ucfloc q{mediators} %></a></li>
              % }
              % if (has_permission(landmarks => 'read')) {
                <li hidden><a href="/configuration/landmarks"><span class="glyphicon glyphicon-globe"></span> <%= ucfloc q{landmarks} %></a></li>
              % }
              % if (has_permission(users => 'manage')) {
                <li><a href="/configuration/users"><span class="glyphicon glyphicon-user"></span> <%= ucfloc q{users} %></a></li>
              % }
              % if (has_permission(realty=> 'export')) {
                <li><a href="/configuration/import"><span class="glyphicon glyphicon-import"></span> <%= ucfloc q{objects import} %></a></li>
                <li><a href="/configuration/export"><span class="glyphicon glyphicon-export"></span> <%= ucfloc q{advertisement} %></a></li>
                <li><a href="/configuration/notifications"><span class="glyphicon glyphicon-send"></span> <%= ucfloc q{notifications} %></a></li>
                <li><a href="/configuration/multylisting"><span class="glyphicon glyphicon-file"></span> Мультилистинг</a></li>
              % }
              </ul>
            </li>
          % }
          </ul>
          <p class="navbar-text navbar-right margin-fix">
            <a href="javascript: " class="chat-show" data-action="chat-show" style="position: relative; margin-right: 20px; text-decoration: none;">
                <span class="glyphicon glyphicon-comment"></span>
                <span id="message-count-notifier" class="badge badge-default quick-notifier hidden" style="position: absolute; right: -12px; top: 4px;"></span>
            </a>
            <a href="/signout" class="navbar-link hide-if-small">[<%= $user->{'name'} %>]</a>
            <a class="divider-vertical hide-if-big" style="padding-top: 12px; padding-bottom: 12px; border-right-color: #797979; border-left-color: #111111;"></a>
            <a href="/signout" class="navbar-link hide-if-big"><img style="height: 40px;" src="<%= $assets_url %>/img/power_off_button.png"></a>
          </p>
        </div>
      </div>
    </nav>

    <div class="container disable-on-ajax disable-on-context disable-on-move-resize">
      <%= content %>

      <!-- Modal Definitions -->
      <%= content_for 'modals' %>
    </div>

    <!-- JavaScript -->
    <script type="application/javascript" src="<%= $assets_url %>/jquery/<%= $jquery_ver %>/jquery-<%= $jquery_ver %>.min.js"></script>
    <%= content_for 'before_bootstrap' %>
    <!-- Bootstrap -->
    <script type="application/javascript" src="<%= $assets_url %>/bootstrap/<%= $bootstrap_ver %>/js/bootstrap.min.js"></script>
    <!-- MomentJS -->
    <script type="application/javascript" src="<%= $assets_url %>/moment/<%= $momentjs_ver %>/moment-with-locales.min.js"></script>
    <!-- HolderJS -->
    <script type="application/javascript" src="<%= $assets_url %>/holder/<%= $holderjs_ver %>/holder.min.js"></script>
    <script>
      Holder.add_theme("big", {background:"#eee", foreground:"#a3cd73", size: 52});
    </script>
    <!-- Pines Notify -->
    <script type="application/javascript" src="<%= $assets_url %>/pnotify/1.2.2/jquery.pnotify.js"></script>
    <script type="application/javascript" src="/js/rphone/rphone.js"></script>
    <!-- Dropzone -->
    <script type="application/javascript" src="/js/dropzone/dropzone.js"></script>

    <%= content_for 'after_bootstrap' %>

    <%= include 'javascript/rplus' %>
    <%= include 'javascript/rplus_table' %>
    <%= include 'javascript/rplus_realty' %>

    <script type="application/javascript">
        var message_alarm = new Audio("<%= $assets_url %>/sound/on_message.ogg");
        var maxFileSize = 10000000; // максимальный размер файла - 10 мб.
        $("#chatScreen").dropzone({
            url: "/api/chat/upload_file",
            maxFilesize: 10,
            success: function (file) {
                var data = jQuery.parseJSON(file.xhr.response);
                var selected_contact_id = $('.contact-active').data('id');
                var text = '';
                var attachment = data.file_url;

                postMessage(selected_contact_id, text, attachment);
            }
        });


        var events = new EventSource('/events');

        events.addEventListener('open', function(e) {
            console.log(e);
        }, false);

        events.addEventListener('error', function(e) {
            console.log(e);
        }, false);

        events.addEventListener('heartbeat', function(e) {
            var edata = event.data;
        }, false);

        events.addEventListener('chat_message', function(e) {
            var edata = e.data;
            console.log('msg');
            console.log(edata);
            message_alarm.play();
            updateMessages();
            updateContactList();
        }, false);

        var p_x = -1;
        var p_y = -1;
        var resize = 0;
        var move = 0;
        $('.chat-handler').mousedown( function (e) {
            e.stopPropagation();
            if (e.which === 1) {
                resize = 1;
                $('body').addClass('disable-selection');
                $('.disable-on-move-resize').addClass('disabled');
            }
        });

        $('.chat-handler').mouseup( function (e) {
            e.stopPropagation();
            if (e.which === 1) {
                resize = 0;
                $('body').removeClass('disable-selection');
                $('.disable-on-move-resize').removeClass('disabled');
            }
        });

        $('.chat-header').mousedown( function (e) {
            if (e.which === 1) {
                move = 1;
                $('body').addClass('disable-selection');
                $('.disable-on-move-resize').addClass('disabled');
            }
        });

        $('.chat-header').mouseup( function (e) {
            if (e.which === 1) {
                move = 0;
                $('body').removeClass('disable-selection')
                $('.disable-on-move-resize').removeClass('disabled');
            }
        });

        $('[data-action="chat-show"]').click(function () {
            showChat()
        });

        function showChat() {
            $('.chat-bg').toggleClass('hidden');
        }

        $('.chat-screen').click( function (e) {
            e.stopPropagation();
        });

        $('.chat-bg').click( function (e) {
            $('.chat-bg').addClass('hidden');
        });

        $(document).mousemove( function (e) {
            if (e.which === 1) {
                if (p_x != -1) {
                    if (resize) {
                        var w = $('.chat-screen').width();
                        var n_w = w + (e.pageX - p_x) * 2;
                        if (n_w >= 680) {
                            $('.chat-screen').width(n_w);
                            $('.chat-screen').css('margin-left', '-' + (n_w / 2).toString() + 'px');
                            var cl_w = n_w - $('.chat-contactlist').width();
                            $('.chat-messagelist').width(cl_w - 1);
                            $('#chatInput').width(cl_w - 70);
                        }

                        var h = $('.chat-screen').height();
                        var n_h = h - (e.pageY - p_y) * 2;
                        if (n_h >= 380) {
                            $('.chat-screen').height(n_h);
                            $('.chat-screen').css('margin-top', '-' + (n_h / 2).toString() + 'px');
                            $('.chat-body').height(n_h - $('.chat-header').height() - $('.chat-footer').height());
                        }
                    } else if (move) {
                        var top = parseInt($('.chat-screen').css('top'));
                        var left = parseInt($('.chat-screen').css('left'));

                        var n_top = top + (e.pageY - p_y);
                        var n_left = left + (e.pageX - p_x);

                        $('.chat-screen').css('top', n_top + 'px');
                        $('.chat-screen').css('left', n_left + 'px');
                    }
                }
                p_x = e.pageX;
                p_y = e.pageY;
            } else {
                resize = 0;
                move = 0;
                $('body').removeClass('disable-selection');
                $('.disable-on-move-resize').removeClass('disabled');

                p_x = -1;
                p_y = -1;
            }
        });

        $('#chatFileInput').change(function(){
            var file = this.files[0];

            if (file.size > maxFileSize) {
                alert('размер файла превышает максимально допустимый');
                return;
            }

            var form_data = new FormData($('#fileForm')[0]);
            $.ajax({
                type: 'POST',
                url: '/api/chat/upload_file',  //Server script to process data
                xhr: function() {  // Custom XMLHttpRequest
                    var myXhr = $.ajaxSettings.xhr();
                    if(myXhr.upload){ // Check if upload property exists
                        myXhr.upload.addEventListener('progress', progressHandlingFunction, false); // For handling the progress of the upload
                    }
                    return myXhr;
                },
                //Ajax events
                /*beforeSend: beforeSendHandler,
                success: completeHandler,
                error: errorHandler,*/
                // Form data
                data: form_data,
                //Options to tell jQuery not to process data or worry about content-type.
                cache: false,
                contentType: false,
                processData: false
            })
                .done(function (data, textStatus, jqXHR) {
                    var selected_contact_id = $('.contact-active').data('id');
                    var text = '';
                    var attachment = data.file_url;

                    postMessage(selected_contact_id, text, attachment);
                })
                .fail(function () {

                });

        });

        function progressHandlingFunction(e){
            if (e.lengthComputable) {}
        }

        $('[data-action="chat-send-file"]').click(function () {
            $('#chatFileInput').click();
        });

        $('[data-action="chat-send-message"]').click(function () {

            var selected_contact_id = $('.contact-active').data('id');
            var text = $('#chatInput').val();
            var attachment = '';

            postMessage(selected_contact_id, text, attachment);
        });

        $('#chatInput').on("keypress", function(e) {
            if (e.keyCode == 13) {
                var selected_contact_id = $('.contact-active').data('id');
                var text = $('#chatInput').val();
                var attachment = '';

                postMessage(selected_contact_id, text, attachment);

                return false;
            }
        });

        $('[data-action="chat-search"]').click(function () {
            switch_to_search();
            var q = $('#chatSearchInput').val();
            findContacts(q);
        });

        $('#chatSearchInput').on("keypress", function(e) {
            if (e.keyCode == 13) {
                switch_to_search();
                var q = $('#chatSearchInput').val();
                findContacts(q);

                return false;
            }
        });

        function findContacts(q) {
            $.ajax({
                type: "POST",
                url: "/api/chat/find_contacts",
                data: {
                    q: q,
                },
            })
                .done(function (data, textStatus, jqXHR) {
                    var list = data.data.list;
                    var xhtml = '';
                    if (list.length > 0) {
                        for (var i = 0; i < list.length; i++) {
                            var contact = list[i];
                            xhtml += buildHtmlForContact(contact, false);
                        }
                    } else {
                        xhtml += '<div class="contact-not-found">Ничего не найдено</div>'
                    }
                    $('#chatContactList').html(xhtml);
                });
        }

        function updateContactList() {
            $.ajax({
              type: "POST",
              url: "/api/chat/list_contacts",
              data: {},
            })
              .done(function (data, textStatus, jqXHR) {
                if(data.status == 'success') {
                    var list = data.data.list;
                    var selected_id = $('.contact-active').data('id');

                    list.sort(function(a, b) {return a.sort_value - b.sort_value}).reverse();
                    var xhtml = '';
                    for (var i = 0; i < list.length; i++) {
                        var contact = list[i];
                        xhtml += buildHtmlForContact(contact, true);
                    }

                    $('#chatContactList').html(xhtml);
                    $('.chat-contact[data-id=' + selected_id + ']').first().addClass('contact-active');
                }
              });
        }

        function switch_to_mycontacts() {
            $('#chatSearch').removeClass('button-active');
            $('#chatMycontacts').addClass('button-active');
            $('#chatMessageList').html('');
        }

        function switch_to_search() {
            $('#chatMycontacts').removeClass('button-active');
            $('#chatSearch').addClass('button-active');
            $('#chatContactList').html('');
            $('#chatMessageList').html('');
        }

        $('[data-action="chat-switch-mycontacts"]').click(function () {
            switch_to_mycontacts();
            listContacts();
        });

        $('[data-action="chat-switch-search"]').click(function () {
            switch_to_search();
            var q = $('#chatSearchInput').val();
            findContacts(q);
        });

        $('#chatContactList').on('click', '.chat-contact', function() {
            var id = $(this).data('id');
            openDialog(id);
        });

        function openDialog(contact_id) {
            var $this = $('.chat-contact[data-id="' + contact_id + '"]');
            var contact_name = $this.data('name');

            $('.chat-contact').removeClass('contact-active');
            $this.addClass('contact-active');

            $('.unread-count', $this).addClass('hidden');
            listMessages(contact_id);

            $('#chatCaption').text(contact_name);
        }

        $('#chatContactList').on('click', 'a[data-action="contact-remove"]', function(e) {
            e.stopPropagation();
            var $this = $(this);
            var id = $this.data('id');
            removeContact(id);
            $this.closest('.chat-contact').addClass('hidden');
        });

        $('#chatContactList').on('click', 'a[data-action="contact-add"]', function(e) {
            e.stopPropagation();
            var $this = $(this);
            var id = $this.data('id');
            addContact(id);
            $this.html('<span class="glyphicon glyphicon-ok"><span>');
        });

        $('#chatMessageList').on('click', 'a[data-action="contact-add"]', function(e) {
            e.stopPropagation();
            var $this = $(this);
            var id = $this.data('id');
            addContact(id, function (c) {
                $('#chatContactList').append(buildHtmlForContact(c, true));
                scrollToContact(id);
                openDialog(id);
            });
            //$this.html('<span class="glyphicon glyphicon-ok"><span>');
        });

        function buildHtmlForContact(contact, my_contacts) {

            var no_photo_url = '<%= $assets_url %>/img/no_user_image.gif';

            var xhtml = '';

            if (contact.id == <%= $self->stash('user')->{id} %>) {
                return xhtml;
            }

            var photo_src = no_photo_url;
            if (contact.photo_url) {
                photo_src = '<%= $self->config->{'storage'}->{'url'} %>' + contact.photo_url
            }
            if (contact.direct_photo_url) {
                photo_src = contact.direct_photo_url
            }
            xhtml += '<div class="chat-contact" data-id=' + contact.id + ' data-name="' + contact.name + '">';

            xhtml += '<div class="chat-contact-overlay">';
            if (my_contacts) {
                if (contact.can_remove) {
                    xhtml += '<a href="#" data-id="' + contact.id + '" data-action="contact-remove" style="position: absolute; right: 5px; top: 50%; margin-top: -7px; color: #747474;"><span class="glyphicon glyphicon-remove"></span></a>';
                }
            } else {
                if (!contact.in_contact_list) {
                    xhtml += '<a href="#" data-id="' + contact.id + '" data-action="contact-add" style="position: absolute; right: 5px; top: 50%; margin-top: -7px; color: #747474;"><span class="glyphicon glyphicon-plus"></span></a>';
                }
            }
            xhtml += '</div>';

            xhtml += '<div class="contact-img-wrapper">';
            xhtml += '<img src="' + photo_src + '" style="width: 64px; height: 64px; border-radius: 50%; background-color: #fff;">';
            xhtml += '</div>';
            xhtml += '<div class="contact-info-wrapper">';
            if (contact.online) {
                xhtml += '<div class="contact-state state-online"></div>';
            } else {
                /*xhtml += '<div class="contact-state state-offline"></div>';*/
            }
            if (contact.unread_count > 0) {
                xhtml += '<span class="unread-count">' + contact.unread_count + '</span>';
            } else {
                xhtml += '<span class="unread-count hidden"></span>';
            }
            xhtml += '<span>' + contact.name + '</span><br>';
            xhtml += '<span>' + (contact.role_loc ? contact.role_loc : contact.role) + '</span><br>';
            xhtml += '<span>' + contact.company_name + '</span>';
            xhtml += '</div>';
            xhtml += '<hr style="clear: both; opacity: 0; margin: 0 5px;">';
            xhtml += '</div>';
            xhtml += '<hr style="clear: both; border-top: 1px solid #DBDBDB; margin: 0 5px;">';

            return xhtml;
        }

        function buildHtmlForMessage(msg) {

            var xhtml = '';
            xhtml += '<div class="chat-message-block">';

            var ts = moment(msg.ts);
            var ts_str = '';
            if (ts.isSame(new Date(), "day")) {
                ts_str = 'Сегодня, ' + ts.format("HH:mm");
            } else {
                ts_str = ts.format("DD.MM HH:mm");
            }

            if (msg.from == <%= $self->stash('user')->{id} %>) {
                xhtml += '<div class="message-sender">';
                xhtml += '<span class="message-ts">' + ts_str + '</span>';
                xhtml += '</div>';
                xhtml += '<div class="chat-message message-left">';
            } else {
                xhtml += '<div class="message-sender"><a href="#" data-id="' + msg.from + '" data-action="contact-add">' + (msg.to ? '' : msg.from_name) + '</a>';
                xhtml += '<span class="message-ts">' + ts_str + '</span>';
                xhtml += '</div>';
                xhtml += '<div class="chat-message message-right">';
            }

            xhtml += '<div class="message-text">' + msg.text + '</div>';
            if (msg.attachment) {
                if (msg.attachment.match(/\.(gif|jpg|jpeg|tiff|png)$/i)) {
                    xhtml += '<img class="message-img-attachment" src="' + msg.attachment + '" style="width: 100%; max-width: 900px; padding: 14px 4px 14px 4px;"></img>';
                } else {
                    xhtml += '<a class="message-file-attachment" href="' + msg.attachment + '" target="_blank"><span class="glyphicon glyphicon-link" style="margin: 4px 0px 14px 12px;"></span>' + '&nbsp;файл' + '</a>';
                }
            }
            xhtml += '</div>';
            xhtml += '<hr style="clear: both; opacity: 0;">';
            xhtml += '</div>';

            return xhtml;
        }

        function listContacts(callback) {
            $.ajax({
              type: "POST",
              url: "/api/chat/list_contacts",
              data: {},
            })
              .done(function (data, textStatus, jqXHR) {
                if(data.status == 'success') {
                    var list = data.data.list;
                    list.sort(function(a, b) {return a.sort_value - b.sort_value}).reverse();
                    var xhtml = '';
                    for (var i = 0; i < list.length; i++) {
                        var contact = list[i];
                        xhtml += buildHtmlForContact(contact, true);
                    }

                    $('#chatContactList').html(xhtml);
                    $('#chatContactList .chat-contact').first().addClass('contact-active');
                    var selected_name = $('.contact-active').first().data('name');
                    $('#chatCaption').text(selected_name);

                    if (callback) {
                        callback();
                    }
                }
              });
        }

        function postMessage(to, text, attachment) {
            if ($('.chat-bg').hasClass('hidden')) {
              return;
            }

            if (!text && !attachment) {
                return;
            }

            if (text == '*' || text == '\'') {
                return;
            }

            $('#chatInput').val('');
            $.ajax({
                type: "POST",
                url: "/api/chat/post",
                data: {
                    to: to,
                    text: text,
                    attachment: attachment,
                },
            })
                .done(function (data, textStatus, jqXHR) {
                    if (data.status == 'success') {
                        $('#chatInput').val('');
                        var xhtml = buildHtmlForMessage(data.data);
                        $('#chatMessageList').scrollTop(0);
                        $('#chatMessageList').prepend(xhtml);
                        $('#chatMessageList').data('last-id', data.data.id);
                    } else {
                        alert('сообщение не отправлено');
                    }
                });
        }

        function listMessages(from_id) {
            $('#chatMessageList').html('');
            $.ajax({
                type: "POST",
                url: "/api/chat/list",
                data: {
                    from: from_id,
                },
            })
                .done(function (data, textStatus, jqXHR) {
                    if(data.status == 'success') {
                        var list = data.data.list;
                        var xhtml = '';

                        for(var i = 0; i < list.length; i++) {
                            var msg = list[i];
                            xhtml += buildHtmlForMessage(msg);
                        }
                        $('#chatMessageList').html(xhtml);
                        if (list.length > 0) {
                            $('#chatMessageList').data('last-id', list[0].id);
                        }
                        Rplus.Functions.getUnreadMessageCount();
                    }
                });
        }

        function updateMessages() {

            var selected_contact_id = $('.contact-active').data('id');

            var last_id = $('#chatMessageList').data('last-id');
            $.ajax({
                type: "POST",
                url: "/api/chat/list",
                data: {
                    from: selected_contact_id,
                    last_id: last_id,
                },
            })
                .done(function (data, textStatus, jqXHR) {
                    if(data.status == 'success') {
                        var list = data.data.list;
                        var xhtml = '';
                        for(var i = 0; i < list.length; i++) {
                            var msg = list[i];
                            xhtml += buildHtmlForMessage(msg);
                        }
                        if (list.length > 0) {
                            $('#chatMessageList').prepend(xhtml);
                            $('#chatMessageList').data('last-id', list[0].id);
                        }
                        Rplus.Functions.getUnreadMessageCount();
                    }
                });
        }

        function addContact(id, callback) {
            $.ajax({
                type: "POST",
                url: "/api/chat/add_to_contact_list",
                data: {
                    contact_id: id,
                },
            })
                .done(function (data, textStatus, jqXHR) {
                    if (data.status == 'success') {
                        var c = data.contact;
                        if (callback) {
                            callback(c);
                        }
                    } else {

                    }
                });
        }

        function removeContact(id) {
            $.ajax({
                type: "POST",
                url: "/api/chat/remove_from_contact_list",
                data: {
                    contact_id: id,
                },
            })
                .done(function (data, textStatus, jqXHR) {

                });
        }

        function scrollToContact(id) {
            var $c = $('.chat-contact[data-id=' + id + ']');
            $('.contact-active').removeClass('contact-active');
            $c.addClass('contact-active');
            $('#chatContactList').scrollTop($c.offset().top);
        }

        function startChatById(id) {
            switch_to_mycontacts();
            listContacts(function () {
                var $c = $('.chat-contact[data-id=' + id + ']');
                if ($c.length == 0) {
                    addContact(id, function (c) {
                        $('#chatContactList').append(buildHtmlForContact(c, true));
                        scrollToContact(id);
                        openDialog(id);
                    });
                } else {
                    openDialog(id);
                    scrollToContact(id);
                }
            });
            showChat();
        }

        function startChatByPhones(q) {
            var q_str = q.join(', ');
            switch_to_search();
            $('#chatSearchInput').val(q_str);
            findContacts(q_str);
            showChat();
        }

        window.Rplus.Functions['showChat'] = function (q) {
            showChat();
        };

        window.Rplus.Functions['startChatById'] = function (id) {
            startChatById(id);
        };

        window.Rplus.Functions['startChatByPhones'] = function (q) {
            startChatByPhones(q);
        };

        listMessages(null);
        listContacts();
    </script>

    <script type="application/javascript">
      "use strict";

      moment.locale('ru');
      moment._months = [
              "Января", "Февраля", "Марта", "Апреля", "Мая", "Июня", "Июля",
              "Августа", "Сентября", "Октября", "Ноября", "Декабря",
          ];

      var globalAjaxEventsRegistered = 0;
      var show_ajax_indicator = 1;

      function registerGlobalAjaxEvents() {
        if (globalAjaxEventsRegistered) return;
        $(document)
          .ajaxStart(function () {
            if (show_ajax_indicator == 1) {
              $('.disable-on-ajax').addClass('disabled');
              $('.indicator-ajax').removeClass('invisible');
            }
          })
          .ajaxStop(function () {
            $('.disable-on-ajax').removeClass('disabled');
            $('.indicator-ajax').addClass('invisible');
          })
        ;
        globalAjaxEventsRegistered = 1;
      }

      function supressAjaxIndicator(supress) {
        if (supress == 1) {
          show_ajax_indicator = 0;
        } else {
          show_ajax_indicator = 1;
        }
      }
    </script>
    <%= content_for 'javascript' %>

    <script type="">

      function isNumber(n) {
        return !isNaN(parseFloat(n)) && isFinite(n);
      }

      function format_phone(phone_str) {
        if (!phone_str) return;
        if (phone_str.length < 5) {                     // внутренний номер? 100X ?
          return phone_str; //phone_blocks(phone_str);
        }
        if (phone_str.length < 8) {              // городской или короткий номер => XXX-XX-XX, XX-XX-XX, X-XX-XX ...
          return phone_blocks(phone_str);
        } else {                                        // {код страны} код города/оператора, номер
          var code_number = '';
          var c_code = ''
          if (phone_str.match(/^\+/)) {
            c_code = phone_str.substring(0, 2) + ' ';
            code_number = phone_str.substring(2);
          } else if (phone_str.match(/^8/)) {
            c_code = phone_str.substring(0, 1) + ' ';
            code_number = phone_str.substring(1);
          } else if (phone_str.length == 11) {
            c_code = phone_str.substring(0, 1) + ' ';
            code_number = phone_str.substring(1);
          } else {
            c_code = '';
            code_number = phone_str;
          }
          return c_code + format_10(code_number);
        }
        return '';
      }

      function reverse(s){
          return s.split("").reverse().join("");
      }

      function format_10(phone_number) {
        /*
        if (phone_number.match(/^(914|924|929|926)/)) { // собрать мегарегулярку или вытаскивать из номера по 3, 4, 5 первых цифр и проверять есть ли они в массиве кодов
          var code = phone_number.substring(0, 3);
          var number = phone_number.substring(3);
          return '(' + code +') ' + phone_blocks(number);
        }
        */
        var code = '';
        var number = '';
        if (phone_number.match(/^(4212|4217)/)) {
          code = phone_number.substring(0, 4);
          number = phone_number.substring(4);
          return '(' + code +') ' + phone_blocks(number);
        }
        code = phone_number.substring(0, 3);
        number = phone_number.substring(3);
        return '(' + code +') ' + phone_blocks(number);
      }

      function phone_blocks(number){
          var len = number.length
          if (len < 3) return number;
          var number_rev = reverse(number);
          var split_num = number_rev.match(/.{1,2}/g);
          if (len > 6) {
            var p = split_num.splice(-1, 1);
            split_num[split_num.length - 1] = split_num[split_num.length - 1] + p[0];
          }
          var t = split_num.join('-');
          return reverse(t);
      }

      function saveRecord(number, name, tag, state) {
        var time = new Date().getTime();
        var call_list = getCallList();
        call_list[time] = {time: time, number: number, name: name, tag: tag, state: state};
        localStorage.setItem('CALL_LIST', JSON.stringify(call_list));
      }

      function getCallList() {
        var list_str = localStorage.getItem('CALL_LIST');
        var call_list;
        if (list_str) {
          call_list = JSON.parse(list_str);
        } else {
          call_list = {};
        }
        return call_list;
      }

      function listCalls() {
        var list = getCallList();
        var cat = $('.calllist-selector-button.active').data('val');
        $('.calllist > tbody').html('');
        for (var ts in list) {
          var obj = list[ts];
          var xhtml = '';

          var state = '';
          var color = '#c5c5c5';
          var suffix = '';

          if (cat == 'MISSED') {
            if (obj.state != 'MISSED') continue;
          }

          if (obj.state == 'OUTGOING') {
            state = '<span class="glyphicon glyphicon-arrow-up"></span>';
            suffix = ', Исходящий';
          } else if (obj.state == 'INCOMING') {
            state = '<span class="glyphicon glyphicon-arrow-down"></span>';
            color = 'rgba(20, 190, 20, 0.98)';
            suffix = ', Входящий';
          } else if (obj.state == 'MISSED') {
            state = '<span class="glyphicon glyphicon-arrow-down"></span>';
            color = 'rgba(190, 20, 20, 0.98)';
            suffix = ', Пропущено';
          }

          var tag = obj.tag ? '<span class="round-button color-tag-' + obj.tag + '" style="margin-right: 6px; width: 12px; height: 12px;"></span>' : '';

          var ts = moment(obj.time);
          var now = moment();
          var time = '';
          if (ts.isAfter(moment().startOf('day'))) {
            time = moment(obj.time).format('HH:mm');
          } else if (ts.isAfter(moment().startOf('week'))) {
            time = moment(obj.time).format('ddd HH:mm');
          } else {
            time = moment(obj.time).format('DD.MM HH:mm');
          }

          xhtml += '<tr>';
          xhtml += '<td class="calllist-record" data-number="' + obj.number + '">';
          xhtml += '<div class="" style="float: left; font-size: 14px; letter-spacing: 1.5px; height: 38px; width: 25px; margin-top: 4px; color: ' + color + ';">';
          xhtml += state;
          xhtml += '</div>';
          xhtml += '<div class="">';
          xhtml += '<div class="" style="font-size: 16px; letter-spacing: 1.5px;">';
          xhtml += tag + ' ' + (obj.name ? obj.name : format_phone(obj.number));
          xhtml += '</div>';
          xhtml += '<div class="" style="font-size: 12px; letter-spacing: 1.5px; color: #c5c5c5;">';
          xhtml += time + suffix;
          xhtml += '</div>';
          xhtml += '</div>';
          xhtml += '</td>';
          xhtml += '</tr>';

          $('.calllist > tbody').prepend(xhtml);
        }
        $('.calllist-record').click(function (e) {
          var phone_num = $(this).data('number') + '';
          $('#callerNumber').html(format_phone(phone_num));
          $('#callerNumber').data('phone_num', phone_num);
        });
      }

      function phoneSetup() {
        console.log('phone setup');
        var call_time = 0;
        var call_timer_id;

        var caller;
        var prev_state = '';
        var sound = document.getElementById("ringSound");

        rPhone.initDone = function() {
          rPhone.register({
            % #my $user = Rplus::Model::User::Manager->get_objects(query => [id => $self->stash('user')->{id}, delete_date => undef])->[0];
            % #my $sip = from_json($user->ip_telephony);
            host: '<%= $sip->{sip_host} %>',
            user: '<%= $sip->{sip_login} %>',
            password: '<%= $sip->{sip_password} %>',
            proxy: '',
          });
        }

        rPhone.onRegStateChanged = function(regInfo) {
          if (regInfo.registered) {
            $('#show-phone-button > span').removeClass('hidden');
          }
        }

        // обработчик состояния звонка
        rPhone.onCallStateChanged = function(callInfo) {
          // 'IDLE', 'INCOMING', 'OUTGOING', 'CONNECTED'
          if (callInfo.state == 'INCOMING') {
            sound.loop = true;
            sound.play();
            $('.phone-screen').removeClass('hidden');
            $('#answer-button').addClass('disabled-button');
            $('#reject-button').addClass('disabled-button');

            $('#answer-button > span').addClass('callin');
            $('#answer-button > span').addClass('lightup-answer');
            $('#reject-button > span').addClass('lightup-reject');

            var phone_num = callInfo.display;
            caller = get_caller(phone_num);
            $('#callerNumber').html(format_phone(phone_num));
            $('#callerNumber').data('phone_num', phone_num);
            $('#callerName').html(caller.name);
            if(caller.photo_url != '') {
              $('#user-pic > img').attr('src', caller.photo_url);
              $('#user-pic').removeClass('hidden');
            } else {
              $('#user-pic > img').attr('src', '');
              $('#user-pic').addClass('hidden');
            }
          } else {
            sound.pause();
            sound.currentTime = 0;
          }

          if (callInfo.state == 'CONNECTED') {
            $('.phone-screen').removeClass('hidden');
            $('#answer-button').removeClass('disabled-button');
            $('#reject-button').removeClass('disabled-button');

            $('#answer-button > span').removeClass('callin');
            $('#answer-button > span').removeClass('lightup-answer');
            $('#reject-button > span').removeClass('lightup-reject');

            var phone_num = callInfo.display;
            caller = get_caller(phone_num);
            $('#sfPhoneNum').val(caller.phone_num);
            $('#callerNumber').html(format_phone(phone_num));
            $('#callerNumber').data('phone_num', phone_num);
            $('#callerName').html(caller.name);
            if(caller.photo_url != '') {
              $('#user-pic > img').attr('src', caller.photo_url);
              $('#user-pic').removeClass('hidden');
            } else {
              $('#user-pic > img').attr('src', '');
              $('#user-pic').addClass('hidden');
            }

            if (prev_state == 'INCOMING') {
              saveRecord(caller.phone_num, caller.name, caller.tag, 'INCOMING');
            }

            call_timer_id = setInterval(callTimerTick, 1000);
          }

          if (callInfo.state == 'IDLE') {
            $('#answer-button').addClass('disabled-button');
            $('#reject-button').addClass('disabled-button');

            $('#answer-button > span').removeClass('callin');
            $('#answer-button > span').removeClass('lightup-answer');
            $('#reject-button > span').removeClass('lightup-reject');

            $('#user-pic > img').attr('src', '');
            $('#user-pic').addClass('hidden');
            $('#callerName').html('');

            if (prev_state == 'INCOMING') {
              saveRecord(caller.phone_num, caller.name, caller.tag, 'MISSED');
            }

            $('#callerNumber').html('');
            $('#callerNumber').data('phone_num', '');

            clearCallTimer();
          }

          if (callInfo.state == 'OUTGOING') {
            $('.phone-screen').removeClass('hidden');
            $('#answer-button').addClass('disabled-button');
            $('#reject-button').addClass('disabled-button');

            $('#answer-button > span').removeClass('callin');
            $('#answer-button > span').addClass('lightup-answer');
            $('#reject-button > span').addClass('lightup-reject');

            var phone_num = callInfo.display;
            caller = get_caller(phone_num);
            $('#sfPhoneNum').val(caller.phone_num);
            $('#callerNumber').html(format_phone(phone_num));
            $('#callerNumber').data('phone_num', phone_num);
            $('#callerName').html(caller.name);
            if(caller.photo_url != '') {
              $('#user-pic > img').attr('src', caller.photo_url);
              $('#user-pic').removeClass('hidden');
            } else {
              $('#user-pic > img').attr('src', '');
              $('#user-pic').addClass('hidden');
            }

            var phone_num = $('#callerNumber').data('phone_num');
            caller = get_caller(phone_num);
            $('#callerName').html(caller.name);

            saveRecord(caller.phone_num, caller.name, caller.tag, 'OUTGOING');
          }

          prev_state = callInfo.state;
          listCalls();
        }

        $('[data-action="call-answer"]').click(function (e) {
          if (rPhone.callState() == 'INCOMING') {
            rPhone.answer();
          }

          if(rPhone.callState() == 'IDLE') {
            var phone_num = $('#callerNumber').data('phone_num');
            rPhone.call({'number': phone_num});
          }
        });

        $('[data-action="call-reject"]').click(function (e) {
          //if (RTCKit.webPhone.callState() == '') {
            rPhone.hangup();
          //}
        });

        $('[data-action="phone-show"]').click(function (e) {
          $('.phone-screen').toggleClass('hidden');
        });

        $('[data-action="numpad-click"]').click(function (e) {
          var phone_num = $('#callerNumber').data('phone_num');
          if (phone_num.length < 11) {
            var key = $(this).data('key');
            phone_num += key;
            $('#callerNumber').html(format_phone(phone_num));
            $('#callerNumber').data('phone_num', phone_num);
          }
        });

        $('[data-action="backspace"]').click(function (e) {
          var phone_num = $('#callerNumber').data('phone_num');
          phone_num = phone_num.slice(0, - 1);
          $('#callerNumber').html(format_phone(phone_num));
          $('#callerName').html('');
          $('#user-pic').addClass('hidden');
          $('#callerNumber').data('phone_num', phone_num);
        });

        $('[data-action="calllist-select"]').click(function (e) {
          $('.calllist-selector-button.active').removeClass('active');
          $(this).addClass('active');
          listCalls();
        });

        $(document).keydown(function(e) {
          var phone_num = $('#callerNumber').data('phone_num');
          if (e.keyCode == 8 && e.target.tagName != 'INPUT' && e.target.tagName != 'TEXTAREA') {
            e.preventDefault();
            phone_num = phone_num.slice(0, - 1);
            $('#callerNumber').html(format_phone(phone_num));
            $('#callerName').html('');
          }
          var key = String.fromCharCode(e.keyCode)
          if (isNumber(key) || key == '#' || key == '*') {
            if (phone_num.length < 11) {
              phone_num += key;
              $('#callerNumber').html(format_phone(phone_num));
            }
          }
          $('#callerNumber').data('phone_num', phone_num);
        });

        function clearCallTimer() {
          call_time = 0;
          clearInterval(call_timer_id);
          $('#call-time').html('');
        }

        function callTimerTick() {
          call_time ++;
          var minutes = ((call_time / 60) > 9 ? '' : '0') + (call_time / 60 | 0);
          var seconds = ((call_time % 60) > 9 ? '' : '0') + (call_time % 60);
          var call_time_str = minutes + ':' + seconds;
          $('#call-time').html(call_time_str);
        }

        function get_caller(phone_num) {
          var r = {name: '', photo_url: '', phone_num: phone_num,}
          $.ajax({
            type: "GET",
            url: "/api/client/get",
            data: {phone_num: phone_num},
            async: false,
            success: function (data, textStatus, jqXHR) {
              r.name = data.name;
              r.tag = data.color_tag_id;
            },
            error: function (jqXHR, textStatus, errorThrown) {},
          });

          $.ajax({
            type: "GET",
            url: "/api/mediator/get",
            data: {phone_num: phone_num},
            async: false,
            success: function (data, textStatus, jqXHR) {
              r.name = data.company.name;
            },
            error: function (jqXHR, textStatus, errorThrown) {},
          });

          $.ajax({
            type: "GET",
            url: "/api/user/find",
            data: {phone_num: phone_num},
            async: false,
            success: function (data, textStatus, jqXHR) {
              r.name = data.name;
              r.photo_url = '<%= $self->config->{'storage'}->{'url'} %>' + '/' + '<%= $self->session('account')->{name} %>' + data.photo_url;
            },
            error: function (jqXHR, textStatus, errorThrown) {},
          });

          return r;
        }

        rPhone.init();
      };
      phoneSetup();
      listCalls();
    </script>

    <script type="application/javascript">
      "use strict";
      $(function () {
        $(document).on('click', 'a[href="#"]', function (event) { event.preventDefault(); });
        $(window).on('load', function (event) {
          var browser = /chrome/.test(navigator.userAgent.toLowerCase()) || /safari/.test(navigator.userAgent.toLowerCase());
          if (!browser) {
            alert('Для корректной работы программы необходимо использовать браузер Google Chrome');
          }
        });

      });

      function getActiveSubCount() {
        var offer_type = 'sale';
        var rent_type = '';
        if (Rplus.Variables['User'].offer_mode.match(/rent/)) {
          offer_type = 'rent';
        }
        if (Rplus.Variables['User'].offer_mode.match(/short/)) {
          rent_type = 'short';
        } else if (Rplus.Variables['User'].offer_mode.match(/long/)) {
          rent_type = 'long';
        }

        supressAjaxIndicator(1);
        $.ajax({
          type: "POST",
          url: "/api/client/get_active_count",
          data: {offer_type_code: offer_type, rent_type: rent_type,},
          complete: function () {}
        })
          .done(function (data, textStatus, jqXHR) {
            if (data.status == 'success') {
              if (data.client_count == 0) {
                $('#client-count-notifier').addClass('hidden');
              } else {
                $('#client-count-notifier').html(data.client_count);
                $('#client-count-notifier').removeClass('hidden');
              }
            }
          });
        supressAjaxIndicator(0);
      }

      function getTodaysTasksCount () {
        supressAjaxIndicator(1);
        var start_date = moment().startOf('day').format();
        var end_date = moment().startOf('day').add(1, 'days').format();
        $.ajax({
          type: "POST",
          url: "/api/task/get_task_count",
          data: {
            agent_id: <%= $self->stash('user')->{id} %>,
            task_status: 'new',
            start_date: start_date,
            end_date: end_date,
          },
        })
          .done(function (data, textStatus, jqXHR) {
            if (data.status == 'success') {
              if (data.count == 0) {
                $('#task-count-notifier').addClass('hidden');
              } else {
                $('#task-count-notifier').html(data.count);
                $('#task-count-notifier').removeClass('hidden');
              }
            }
          });
        supressAjaxIndicator(0);
      }

      function getUnreadMessageCount () {
        supressAjaxIndicator(1);
        $.ajax({
          type: "POST",
          url: "/api/chat/get_unread_message_count",
          data: {},
        })
          .done(function (data, textStatus, jqXHR) {
            if (data.status == 'success') {
              if (data.data.count == 0) {
                $('#message-count-notifier').addClass('hidden');
              } else {
                $('#message-count-notifier').html(data.data.count);
                $('#message-count-notifier').removeClass('hidden');
              }
            }
          });
        supressAjaxIndicator(0);
      }

      getTodaysTasksCount();
      setInterval(getTodaysTasksCount, 300000);

      getActiveSubCount();
      setInterval(getActiveSubCount, 300000);

      getUnreadMessageCount();

      window.Rplus.Functions['getTodaysTasksCount'] = function () {
          getTodaysTasksCount();
      };

      window.Rplus.Functions['getActiveSubCount'] =  function () {
          getActiveSubCount();
      };

      window.Rplus.Functions['getUnreadMessageCount'] = function () {
            getUnreadMessageCount();
      };
    </script>
  </body>
</html>
