% layout 'default';

% content_for after_bootstrap => begin
<script type="text/javascript" src="/js/bootstrap-daterangepicker.js"></script>
% end

% content_for header => begin
<link rel="stylesheet" type="text/css" href="/css/bootstrap-daterangepicker.css">
<style type="text/css">
  .badge-transparent {
    background-color: transparent;
    color: #999;
  }
</style>
<script type="text/javascript">
  var tasksPage = (function () {
    var startDate, endDate;

    function loadTasks() {
      var category = $('#filterCategory').val() || null;

      $.ajax({
        type: "POST",
        url: "<%= q{/api/task/list} %>",
        data: {category: category, start_date: startDate, end_date: endDate}
      })
        .done(function (data) {
          var xhtmlIn = '',
              xhtmlOut = '',
              tasksInActiveCount = 0,
              tasksOutActiveCount = 0
          ;
          for (var i = 0; i < data.in.list.length; i++) {
            var x = data.in.list[i];
            var showWarning = x.status == 'scheduled' && moment(x.deadline_date).isBefore(moment(), 'day');
            xhtmlIn += '<tr data-toggle="taskDialog" data-id="' + x.id + '" style="' + (x.status != 'scheduled' ? 'color: rgb(199, 199, 199);' : '') + '" class="' + (showWarning ? 'error' : '') + '">';
            xhtmlIn += '<td>' + (x.creator || '') + '</td>';
            xhtmlIn += '<td>' + moment(x.deadline_date).format("DD.MM.YYYY") + '</td>';
            xhtmlIn += '<td>' + (x.remind_date ? moment(x.remind_date).format("DD.MM.YYYY HH:mm") : '') + '</td>';
            xhtmlIn += '<td>' + $('<div>').text(x.description || '').html() + '</td>';
            xhtmlIn += '<td>' + x.status + '</td>';
            xhtmlIn += '<td><a data-toggle="realtyCard" data-open="foreground" data-id="' + x.realty_id + '" style="cursor: pointer;">' + (x.realty || '') + '</a></td>';
            xhtmlIn += '</tr>';
            if (x.status == 'scheduled') {
              tasksInActiveCount++;
            }
          }
          for (var i = 0; i < data.out.list.length; i++) {
            var x = data.out.list[i];
            xhtmlOut += '<tr>';
            xhtmlOut += '<td>' + x.assigned_user + '</td>';
            xhtmlOut += '<td>' + moment(x.deadline_date).format("DD.MM.YYYY") + '</td>';
            xhtmlOut += '<td>' + (x.remind_date ? moment(x.remind_date).format("DD.MM.YYYY HH:mm") : '') + '</td>';
            xhtmlOut += '<td>' + $('<div>').text(x.description || '').html() + '</td>';
            xhtmlOut += '<td>' + x.status + '</td>';
            xhtmlOut += '<td>' + (x.realty || '') + '</td>';
            xhtmlOut += '</tr>';
            //if (x.status == 'scheduled') {
              tasksOutActiveCount++;
            //}
          }
          $('#tasksInTable tbody').html(xhtmlIn);
          $('#tasksOutTable tbody').html(xhtmlOut);
          $('#tasksInCount').text(data.in.count);
          $('#tasksOutCount').text(data.out.count);

          if (tasksInActiveCount) {
            $('#tasksInActiveCount').text(tasksInActiveCount).show();
          } else {
            $('#tasksInActiveCount').text(tasksInActiveCount).hide();
          }
          if (tasksOutActiveCount) {
            $('#tasksOutActiveCount').text(tasksOutActiveCount).show();
          } else {
            $('#tasksOutActiveCount').text(tasksOutActiveCount).hide();
          }
        })
      ;
    }

    $(function () {
      $('#reportrange').daterangepicker(
        {
           ranges: {
              'Today': [new Date(), new Date()],
              'This Week': [moment().startOf('week'), moment().endOf('week')],
              'This Month': [moment().startOf('month'), moment().endOf('month')],
              'Last 30 Days': [moment().subtract('days', 29), new Date()],
           },
           opens: 'left',
           format: 'DD.MM.YYYY',
           separator: ' to ',
           startDate: moment(),
           endDate: moment(),
           minDate: '01/06/2012',
           //maxDate: '12/31/2013',
           locale: {
               applyLabel: 'Submit',
               fromLabel: 'From',
               toLabel: 'To',
               customRangeLabel: 'Custom Range',
               daysOfWeek: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr','Sa'],
               monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
               firstDay: 1
           },
           showWeekNumbers: true,
           buttonClasses: ['btn-danger'],
           dateLimit: false
        },
        function(start, end) {
          startDate = start.format('YYYY-MM-DD');
          endDate = end.format('YYYY-MM-DD');
          $('#reportrange span').html(start.format('MMMM D, YYYY') + ' - ' + end.format('MMMM D, YYYY'));
          loadTasks();
        }
      );

      //Set the initial state of the picker label
      startDate = endDate = moment().format('YYYY-MM-DD');
      $('#reportrange span').html(moment().format('MMMM D, YYYY') + ' - ' + moment().format('MMMM D, YYYY'));

      $('#tasksPill a[data-toggle="pill"]').on('shown', function (event) {
        $('.badge', event.relatedTarget).addClass('badge-transparent');
        $('.badge', this).removeClass('badge-transparent');
      });

      $('#newTaskBtn').click(function (event) {
        TaskDialog({
          events: {
            save: function () {
              loadTasks();
            }
          }
        }).create({
          category: "other",
        });
      });

      loadTasks();

      $('#tasksInTable').on('click', '[data-toggle="taskDialog"]', function (event) {
        var id = $(this).data('id');
        TaskDialog({
          events: {
            save: function () {
              loadTasks();
            }
          }
        }).open(id);

        event.stopPropagation();
      });

      /**
       * Realty cards
       */
      $('#tasksInTable').on('click', '[data-toggle="realtyCard"]', function (event) {
        var id = $(this).data('id');
        var open = $(this).data('open') || 'background';

        // Проверим, не открыта ли уже карточка
        if ($('#navTab a[href="#realty-' + id + '"]').length) {
          $('#navTab a[href="#realty-' + id + '"]').tab('show');
        } else {
          var card = RealtyCard({
            container: function (x)  {
              // Дополнительно проверим, что контейнера не существует
              if ($('#navTab a[href="#realty-' + id + '"]').length == 0) {
                $('#navTab').append('<li><a href="#realty-' + x.id + '" data-toggle="tab" data-id="' + x.id + '">' + $('<div>').text(x.title).html() + '&nbsp;<span class="close">&times;</span></a></li>');
                $('#navTabContent').append('<div class="tab-pane" id="realty-' + x.id + '"></div>');
                return $('#realty-' + x.id, '#navTabContent');
              } else {
                return null;
              }
            },
            done: function (x) {
              $('#navTab a[href="#realty-' + x.id + '"]').data('card', card);
              if (open == 'foreground') {
                $('#navTab a[href="#realty-' + x.id + '"]').tab('show');
              } else {
                // Nothing to do
              }
              // Подсветим открытый вариант в таблице
              //$('tr[data-id="' + id + '"]', '#realtyTable').addClass('warning');
            },
            events: {
              save: function (x) {
                // Обновим заголовок
                $('#navTab > li > a[href="#realty-' + x.id + '"]').html($('<div>').text(x.title).html() + '&nbsp;<span class="close">&times;</span>');
                // Если данная недвижимость входит в текущий отображаемый список - обновим его
                if (currentRealtyPool[x.id]) {
                  //doQuery(el_currentPage.data('page'));
                }
              },
            }
          }).open(id);
        }

        event.stopPropagation();
      });

      // Close
      $('#navTab').on('click', 'span.close', function (event) {
        var id = $(this).parent().data('id');
        var card = $(this).parent().data('card');

        if ($(this).parent().parent().hasClass('active')) {
          if ($(this).parent().parent().next().length) {
            // Open next tab
            $('>a', $(this).parent().parent().next()).tab('show');
          }  else {
            // Open tasks tab
            $('#navTab a[href="#tasks"]').tab('show');
          }
        }

        // Remove realty block
        card.close();
        $('#navTab a[href="#realty-' + id + '"]').parent().remove();
        $('#navTabContent div.tab-pane[id="realty-' + id + '"]').remove();

        // Уберём подсветку в таблице
        //$('tr[data-id="' + id + '"]', '#realtyTable').removeClass('warning');

        return false;
      });
    });
  })();
</script>
% end

%= include 'blocks/task_dialog';
%= include 'blocks/realty_card';

<div class="row">
  <div class="span12">
    <ul class="nav nav-tabs" id="navTab">
      <li class="active"><a href="#tasks" data-toggle="tab"><span style="font-weight: bold;">Tasks</span></a></li>
    </ul>
  </div>
</div>

<div class="tab-content" id="navTabContent">
  <div class="tab-pane active" id="tasks">

<div class="row">
  <div class="span6">
    <div class="pull-left">
      <select style="margin-bottom: 0px; width: 170px;" id="filterCategory">
        <option value="">All</option>
        <option value="realty">Realty</option>
        <option value="other">Other</option>
      </select>
    </div>
  </div>
  <div class="span6" style="height: 30px; padding-top: 5px;">
    <div class="pull-right">
      <div id="reportrange" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; display: inline;">
        <i class="icon-calendar icon-large"></i>
        <span>June 5, 2013 - June 5, 2013</span>
        <b class="caret" style="margin-top: 8px"></b>
      </div>
      <button type="button" style="margin-left: 10px;" class="btn btn-small btn-primary" id="newTaskBtn"><i class="icon-white icon-plus"></i></button>
    </div>
  </div>
</div>

<div class="row">
  <!-- nav-pills -->
  <div class="span2">
    <div class="row" style="margin-top: 28px;">
      <div class="span2">
        <ul class="nav nav-pills nav-stacked" id="tasksPill">
          <li class="active"><a href="#tasksIn" data-toggle="pill"><i class="icon-arrow-down"></i> Incoming <span class="badge badge-important" style="font-weight: normal; display: none;" id="tasksInActiveCount">0</span></a></li>
          <li><a href="#tasksOut" data-toggle="pill"><i class="icon-arrow-up"></i> Outgoing <span class="badge badge-important badge-transparent" style="font-weight: normal; display: none;" id="tasksOutActiveCount">0</span></a></li>
        </ul>
      </div>
    </div>
  </div> <!-- /nav-pills -->

  <div class="span10">
    <div class="tab-content" id="tasksPillContent">
      <div class="tab-pane active" id="tasksIn">

<div class="row">
  <div class="span10" style="margin-top: 5px; margin-bottom: 5px;">
    <span class="muted">Найдено: </span><span class="muted" id="tasksInCount">0</span>
  </div>
</div>
<div class="row">
  <div class="span10">
    <table class="table table-striped table-condensed table-bordered table-hover" style="font-size: 10pt;" id="tasksInTable">
      <thead>
        <tr>
          <th style="width: 200px;">From</th>
          <th style="width: 75px;">Deadline</th>
          <th style="width: 115px;">Remind</th>
          <th>Description</th>
          <th style="width: 100px;">Status</th>
          <th>Realty</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
</div>

      </div>
      <div class="tab-pane" id="tasksOut">

<div class="row">
  <div class="span10" style="margin-top: 5px; margin-bottom: 5px;">
    <span class="muted">Найдено: </span><span class="muted" id="taskOutCount">0</span>
  </div>
</div>
<div class="row">
  <div class="span10">
    <table class="table table-striped table-condensed table-bordered" style="font-size: 10pt;" id="tasksOutTable">
      <thead>
        <tr>
          <th style="width: 200px;">To</th>
          <th style="width: 75px;">Deadline</th>
          <th style="width: 115px;">Remind</th>
          <th>Description</th>
          <th style="width: 100px;">Status</th>
          <th>Realty</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
</div>

      </div>
    </div>
  </div>
</div>

  </div> <!-- /tab-pane#tasks -->
</div> <!-- /tab-content -->
