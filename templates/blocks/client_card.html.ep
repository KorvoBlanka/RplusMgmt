% use Rplus::Model::ColorTag::Manager;
% use Rplus::Model::DictColorTag::Manager;

% content_for header => begin
%= css_once "$assets_url/bootstrap-datepicker/css/datepicker3.css";
  
<style type="text/css">
  
  textarea {
    resize: none;
  } 
  
  #clientCard_modal {
    overflow: hidden;
  }
  
  #clientCard_modal .modal-dialog {
    width: 480px !important;
  }
  
  #client-card-body {
    height: 560px !important;
    padding: 0px;
  }
  
  .ctrl-button {
    text-decoration: none !important;
    font-size: 15px;
    color: #428bca !important;
  }
  
  .ctrl-button:hover {
    color: #3070b0 !important;
  }
  
  .mainheader > div > p {
    margin-bottom: 0px;
    margin-top: 8px;
  }
  
  .subscription-container > div > div > p {
    margin-bottom: 0px;
    margin-top: 5px;    
  }
  
  hr {
    margin-top: 0px;
    margin-bottom: 0px;
  }
  
  .subscription-container > hr {
    margin-top: 5px;
  }
  
  #subscription-type {
    width: 90px;
  }
  
  .spacer {
    height: 34px;
  }
  
  .subscription {
    margin-bottom: 20px;
  }
  
  .text-input,
  .text-input[readonly="readonly"]{
    border: none !important;
    border-color: transparent !important;
    background-color: #fff;
    box-shadow: none !important;
    border-top: 0px;
    padding-bottom: 0px;
    width: 415px !important;
    padding-right: 0px;
  }

  .date-input {
    border: none !important;
    border-color: transparent !important;
    box-shadow: none !important;
    background-color: #f5f5f5;
  }
  
  input:focus,
  select:focus,
  textarea:focus,
  button:focus {
    outline: none;
  }
  
  .ccard-input-group-addon {
    padding: 6px 12px;
    font-size: 14px;
    font-weight: normal;
    line-height: 1;
    color: #555;
    text-align: center;
    display: table-cell;
    border: none;
    box-shadow: none;
    background-color: rgba(255, 255, 255, 0);
  }

  .tag-group {
    padding-top: 5px;
    padding-left: 40px;
    padding-bottom: 5px;
  }
  
  .ccard-input-group {
    min-height: 34px;
  }
  
  .cardheader {
    min-height: 20px;
    padding: 2px;
    margin-bottom: 0px;
    background-color: #f5f5f5;
    border: 0px solid #e3e3e3;
    border-radius: 0px;
    -webkit-box-shadow: inset 0 1px 1px rgba(0,0,0,0.05);
    box-shadow: inset 0 1px 1px rgba(0,0,0,0.05);
    color: #aaa;
  }
  
  .mainheader {
    color: #666;
  }

  .spec-label-red {
    color: #ddd;
  }

  .spec-label-red:hover {
    color: #CA2F2F;
  }
  
  .glyp-big {
    font-size: 16px;
  }
  
  .spec-label-green {
    color:#1F861F;
  }
  
  .nodispaly {
    display: none;
  }
  
  .tag-button {
    height: 14px;
    width: 14px;
    border-radius: 7px;
    margin-top: 7px;
  }

  .round-button {
    height: 14px;
    width: 14px;
    border-radius: 7px;
    margin-right: 5px;
    
    margin-top: 5px;
    
    float: left!important;
  }

  .arrow {
    font-size: 22px;
  }
  
  .round-button:hover {
    box-shadow: 0px 0px 5px #888888;
  }

  .color-tag-placeholder {
    background: #fff;
    border: 1px solid #aaa;
  }
  
  .tag-selected {
    box-shadow: 0px 0px 8px #555;
  }
  
  #subscriptionRealtyTable > tbody > tr > td {
    padding-left: 12px;
  }
  
  % for my $x (@{Rplus::Model::DictColorTag::Manager->get_objects(query => [delete_date => undef], sort_by => 'id')}) {
  .color-tag-<%= $x->id %> {
    background: #<%= $x->color %>;
    border: 1px solid #<%= $x->border_color %>;
  }
  % }
  
  @-webkit-keyframes shake {
    0% { -webkit-transform: translateX(4px) }
    10% { -webkit-transform: translateX(8px) }
    20% { -webkit-transform: translateX(16px) }
    30% { -webkit-transform: translateX(8px) }
    40% { -webkit-transform: translateX(4px) }
    50% { -webkit-transform: translateX(0px) }
    60% { -webkit-transform: translateX(-4px) }
    70% { -webkit-transform: translateX(-8px) }
    80% { -webkit-transform: translateX(-16px) }
    90% { -webkit-transform: translateX(-8px) }
    100% { -webkit-transform: translateX(-4px) }
  }

  .shaker {
    -webkit-animation: 0.2s 2;
    -webkit-animation-name: shake;
  }
  
  .invisible {
    visibility: hidden!important;
  }
  
  .ddp {
    pointer-events: none;
  }

  .form-control[disabled], .form-control[readonly], fieldset[disabled] .form-control {
    cursor: inherit;
    background-color: #fff;
  }  
</style>
% end

% content_for after_bootstrap => begin
%= js_once "$assets_url/bootstrap-datepicker/js/bootstrap-datepicker.js";
%= js_once "$assets_url/bootstrap-datepicker/js/locales/bootstrap-datepicker.ru.js";
% end

% content_for javascript => begin



<script type="text/javascript">
  "use strict";

  // Singletone dialog
  var ClientCard = (function () {
    // Global variables

    var $modal, cmode = 1, events = {}, subs = {}, client = {}, subscription_mode = 'sale';
    var selected_tag_id = 0;

    // Init here
    $(function () {
      $modal = $('#clientCard_modal').modal({show: false, backdrop: false});

      $modal.on('click', '[data-action="client-unlock"]', function (e) {
        setMode(1);
      });
      
      $modal.on('click', '[data-action="client-cancel"]', function (e) {
        setMode(0);
        setClientView(cached_client, 1, false);
      });
      
      $modal.on('click', '[data-action="subscription-type-change"]', function (e) {
        if (subscription_mode == 'sale') {
          subscription_mode = 'rent';
          $("#subscription-type").html('Аренда');
        } else {
          subscription_mode = 'sale';
          $("#subscription-type").html('Продажа');
        }
      });

      $modal.on('click', '[data-action="show-proposed"]', function(e) {
        var $this = $(this);
        var guid = $this.data('guid');
        var subscription = subs[guid]; //$('.subscription[data-guid="' + guid + '"]', $modal).data('obj');        
        pushRealtyToTable(subscription.id);
        showProposedRealty(true);
      });

      $modal.on('click', '[data-action="close-proposed"]', function(e) {
        showProposedRealty(false);
      });
      
      // Set color tag for subscription
      $modal.on('click', '[data-action="subscription-set-color_tag_id"]', function (e) {
        if (cmode == 0) return;
        
        if (selected_tag_id != $(this).data('val')) {
          $('.tag-selected').removeClass('tag-selected');
          selected_tag_id = $(this).data('val');
        }
        else {
          selected_tag_id = 0;
        }
        $(this).toggleClass('tag-selected');
      });

      // Action: delete subscription
      $modal.on('click', '[data-action="subscription-delete"]', function (e) {
        var guid = $(this).data('guid');
        $('.subscription[data-guid="' + guid + '"]', $modal).addClass('hidden');
      });

      // Action: create subscription
      $modal. on('click', '[data-action="subscription-create"]', function (e) {
        var subscription = new Object;
        subscription.offer_type_code = subscription_mode;
        subscription.add_date = moment().format('YYYY-MM-DDTHH:mm:ssZZ');
        subscription.end_date = moment().add('days', 14).format('YYYY-MM-DDTHH:mm:ssZZ');
        subscription.realty_limit = 20;
        subscription.send_owner_phone = 0;
  
        subscription.queries = ['',];
        
        pushSubscriptionToTableView(subscription);
      });

      // Action: save client & his subscriptions
      $modal.on('click', '[data-action="client-save"]', function (e) {
        save();
        setMode(1);
      });
    });

    function showProposedRealty(show) {
      if (show) {
        $('.emode-btn').addClass("hidden");
        $('.smode-btn').addClass("hidden");
        $('.rmode-btn').removeClass("hidden");

        $('#proposed-realty-table').removeClass('hidden');
        $('#client-card').addClass('hidden');
      } else {
        setMode(cmode);
        $('.rmode-btn').addClass("hidden");

        $('#proposed-realty-table').addClass('hidden');
        $('#client-card').removeClass('hidden');        
      }
    }
    
    function setMode(mode) {
      cmode = mode;
      if(mode == 0) {        
        $('.emode').addClass("invisible");
        $('.smode').removeClass("invisible");
        $('.emode-btn').addClass("hidden");
        $('.smode-btn').removeClass("hidden");
        $('#phonecb', $modal).attr('disabled', true);
        $('.text-input').attr('readonly', true);
        $('[name="end_date"]:input', $modal).addClass('ddp');
      } else if(mode == 1) {       
        $('.emode').removeClass("invisible");
        $('.smode').addClass("invisible");
        $('.emode-btn').removeClass("hidden");
        $('.smode-btn').addClass("hidden");
        $('#phonecb', $modal).attr('disabled', false);
        $('.text-input').attr('readonly', false);
        $('[name="end_date"]:input', $modal).removeClass('ddp');
      }
    }

    function save() {
      $('#phone-num-alert', $modal).addClass('hidden');
      var cant_save = false;
      $('#clientCard_subscriptionForm > div > div:visible', $modal).each(function (index, elem) {       
        var empty_query = false;
        $('[name="query"]', this).each(function (index, elem) {
          if ($(this).val().length == 0) {
            empty_query = true;
            cant_save = true;
          }
        });
        if (empty_query) {
          $('#query-alert', this).removeClass('nodispaly');
          var $arrow = $('#arrow', this);
          $arrow.each(function () {
            var $this = $(this);
            $this.addClass('nodispaly');
          });
        } else {
          $('#query-alert', this).addClass('nodispaly');
          var $arrow = $('#arrow', this);
          $arrow.each(function () {
            var $this = $(this);
            $this.removeClass('nodispaly');
          });
        }
      });
      
      if (cant_save) {
        $modal.addClass('shaker');
        setTimeout('$("#clientCard_modal").removeClass("shaker");', 1000);
        return;
      }

      var client = {
        id: $('#clientCard_clientForm [name="id"]:input', $modal).val(),
        name: $('#clientCard_clientForm [name="name"]:input', $modal).val(),
        phone_num: $('#clientCard_clientForm [name="phone_num"]:input', $modal).val(),
        email: $('#clientCard_clientForm [name="email"]:input', $modal).val(),
        skype: $('#clientCard_clientForm [name="skype"]:input', $modal).val(),
        description: $('#clientCard_clientForm [name="description"]:input', $modal).val(),
        send_owner_phone: $('#clientCard_clientForm [name="send_owner_phone"]', $modal).prop('checked'),
        agent_id: $('#clientCard_clientForm [name="agent_id"]', $modal).val(),
        color_tag_id: selected_tag_id,
      };
      $.ajax({
        type: "POST",
        url: "/api/client/save",
        data: client,
        beforeSend: function (jqXHR, settings) {},
        complete: function (jqXHR, textStatus) {},
      })
        .done(function (data, textStatus, jqXHR) {
          var success = true;
          client.id = data.id;

          // Delete old queries
          /*$('#clientCard_subscriptionForm > div > div.subscription:hidden', $modal).each(function (index, elem) {
            var subscription = subs[$(this).data('guid')];
            if (subscription.id) {
              $.ajax({
                type: "POST",
                url: "/api/subscription/delete",
                data: {id: subscription.id},
                async: false, // (!)
                success: function (data2, textStatus2, jqXHR2) {},
                error: function (jqXHR2, textStatus2, errorThrown2) {
                  success = false;
                },
              });
            }
          });*/

          // Save (add/update) queries
          $('#clientCard_subscriptionForm > div > div.subscription:visible', $modal).each(function (index, elem) {
            var subscription = subs[$(this).data('guid')];
            subscription.queries = [];
            $('[name="query"]', this).each(function (index, elem) {
              subscription.queries.push($(this).val());
            });

            if ($('[name="end_date"]:input', this).datepicker('getDate') != 'Invalid Date') {
              subscription.end_date = moment($('[name="end_date"]:input', this).datepicker('getDate')).format('YYYY-MM-DD') + 'T' + moment(subscription.add_date).format('HH:mm:ssZZ');
            }

            if (!subscription.client_id) subscription.client_id = client.id;
            $.ajax({
              type: "POST",
              url: "/api/subscription/save",
              data: subscription,
              async: false, // (!)
              success: function (data2, textStatus2, jqXHR2) {},
              error: function (jqXHR2, textStatus2, errorThrown2) {
                success = false;
              },
            });
          });

          if(success) {
            $.ajax({
              type: "GET",
              url: "/api/client/get",
              data: {id: client.id, with_subscriptions: true},
            })
              .done(function (data, textStatus, jqXHR) {
                setClientView(data, 1, true);
                //$modal.modal({show: true, backdrop: false});
                // Emit event
                if ($.isFunction(events.saved)) {
                  events.saved(data);
                }
                
              })
          } else {
            $modal.addClass('shaker');
            setTimeout('$("#clientCard_modal").removeClass("shaker");', 1000);
          }
        })
        .fail(function (jqXHR, textStatus, errorThrown) {
          $modal.addClass('shaker');
          setTimeout('$("#clientCard_modal").removeClass("shaker");', 1000); 
          $('#phone-num-alert', $modal).removeClass('hidden');

              var stackBottomRight = {"dir1": "up", "dir2": "left", "firstpos1": 75, "firstpos2": 25};
               $.pnotify({
                  title: "Ошибка при сохранении",
                  text: 'Клиент с таким номером уже существует, попробуйте воспользоваться поиском',
                  sticker: true,
                  addclass: "stack-bottomright custom-notify",
                  stack: stackBottomRight,
                  type: "error",
                  cornerclass: "ui-pnotify-sharp",
              });

        })
      ;
      
      setTimeout(function () {
        $.ajax({
          type: "POST",
          url: "/api/client/update_offer_types",
          data: {id: client.id},
          beforeSend: function (jqXHR, settings) {},
          complete: function (jqXHR, textStatus) {},
        })
          .done(function (data, textStatus, jqXHR) {
              console.log('update_offer_types');
          })
        ;
      }, 1500);
      
    }

    var cached_client = null;
    
    function setClientView(client, mode, cache_it) {
      if (!client) return;
      if (cache_it) {
        cached_client = jQuery.extend(true, {}, client);
      }

      $('#phone-num-alert', $modal).addClass('hidden');
      $('#query-alert', $modal).addClass('nodispaly');
      $('#clientCard_clientForm [name="id"]:input', $modal).val(client.id);
      $('#clientCard_clientForm [name="name"]:input', $modal).val(client.name);
      $('#clientCard_clientForm [name="phone_num"]:input', $modal).val(Rplus.Util.formatPhoneNum(client.phone_num));
      $('#clientCard_clientForm [name="email"]:input', $modal).val(client.email);
      $('#clientCard_clientForm [name="skype"]:input', $modal).val(client.skype);
      $('#clientCard_clientForm [name="description"]:input', $modal).val(client.description);
      //$('#clientCard_addDate', $modal).text(moment(client.add_date).format('DD.MM.YYYY'));
      if (client.send_owner_phone == true) {
        $('#clientCard_clientForm [name="send_owner_phone"]', $modal).prop('checked', true);
      } else {
        $('#clientCard_clientForm [name="send_owner_phone"]', $modal).prop('checked', false);
      }
      $('#clientCard_clientForm [name="agent_id"]', $modal).val(client.agent_id);
      
      if (subscription_mode == 'rent') {
        $("#subscription-type").html('Аренда');
      } else {
        $("#subscription-type").html('Продажа');
      }

      $('.round-button').each(function(){
        $(this).removeClass('tag-selected');
      });
      $('.color-tag-' + client.color_tag_id + '').addClass('tag-selected');
      
      // Clear subscriptions table
      $('.subscription-container', $modal).empty();
      if (client.subscriptions) {
        for (var i = 0; i < client.subscriptions.length; i++) {
          pushSubscriptionToTableView(client.subscriptions[i]);
        }
      }
      
      var dummy = '';
      if (client.subscriptions && client.subscriptions.length == 1) {
        for (var i = 0; i < 3; i++) {
          dummy += '<hr width="90%" align="right">';
          dummy += '<div class="spacer"></div>';
        }
      }
      dummy += '<hr width="90%" align="right">';
      $('.subscription-container', $modal).append(dummy);
      
      setMode(mode);
    }

    function pushSubscriptionToTableView(subscription) {
      if (!subscription.guid) subscription.guid = Rplus.Util.guid();

      var add_date = moment(subscription.add_date),
          end_date = moment(subscription.end_date);

      var xhtml = '<div class="subscription" data-guid="' + subscription.guid + '">';
      xhtml += '<div class="cardheader mainheader">';
      xhtml += '<div class="input-group ccard-input-group">'
      xhtml += '<span class="ccard-input-group-addon " style="text-align: left;">' + (subscription.offer_type_code == 'sale' ? '&nbspПродажа' : '&nbspАренда') + ': ' + add_date.format('DD.MM.YYYY') + ' - <input readonly data-action="end-date-set" name="end_date" class="date-input spec-label-' + (end_date < moment() ? 'red' : 'green') + '"></span>';
      if(subscription.queries[0].length != 0) {
        xhtml += '<div class="ccard-input-group-addon" style="width: 1%;"></div>';
      } else {
        xhtml += '<div class="ccard-input-group-addon" style="width: 1%;"><a href="#" class="emode" data-action="subscription-delete" data-guid=' + subscription.guid +'><span class="glyphicon glyp-big glyphicon-minus-sign text-danger"></span></a></div>';
      }
      xhtml += '</div>';
      xhtml += '</div>';
      
      xhtml += subscription.queries.map(function (x) {
          var res = '<div class="input-group ccard-input-group">';
          //res += '<a href="#" class="ccard-input-group-addon" data-action="tag-select"><span data-guid=' + subscription.guid +' class="tag-button color-tag-placeholder color-tag-' + subscription.color_tag_id + ' pull-right"></span></a>';
          var readonly = '';
          if (x.length > 0) {
            readonly = 'disabled';
          }

          console.log(readonly);

          res += '<textarea ' + readonly + ' type="text" class="form-control text-input" name="query" rows="2" placeholder="Текст запроса">' + Rplus.Util.escape(x) + '</textarea>';

          console.log(res);

          res += '<span id="query-alert" style="color: red;" class="ccard-input-group-addon glyphicon glyp-big glyphicon-exclamation-sign nodispaly"></span>';
          res += '<a href="#" id="arrow" class="ccard-input-group-addon" data-action="show-proposed" data-guid=' + subscription.guid +'><span  class="glyphicon glyphicon-arrow-right"></span></a>';
          res += '</div>';
          return res;
        }).join("\n");
      xhtml += '</div>';

      subs[subscription.guid] = subscription;
      var $row = $(xhtml);

      $('[name="end_date"]:input', $row).val(subscription.end_date ? moment(subscription.end_date).format('DD.MM.YYYY') : null).datepicker({
        format: "dd.mm.yyyy",
        weekStart: 1,
        language: 'ru',
        autoclose: true
      });

      // Add new Or replace subscription
      var $ext_row = $('.subscription-container > div[data-guid="' + subscription.guid + '"]', $modal);
      if ($ext_row.length) {
        $ext_row.replaceWith($row);
      } else {
        $('.subscription-container', $modal).prepend($row);
      }
    }

    function pushRealtyToTable(subscription_id) {
      var page = 1;
      var _listRealty_started = true;
      $.ajax({
        type: "POST",
        url: "/api/subscription/realty_list",
        data: {subscription_id: subscription_id, sr_offered: '1', page: page, per_page: 100},
        complete: function () { _listRealty_started = false; }
      })
        .done(function (data, textStatus, jqXHR) {
          
          if (page == 1) {
            $('tbody', $modal).scrollTop(0);
            var dummy = '';
            $('tbody', $modal).html(dummy);
          }

          for (var i = 0; i < data.list.length; i++) {
            var r = data.list[i];
            var xhtml = '<tr data-id="' + r.id + '">';

            var classes = [Rplus.Table['realty_states'][r.state_code].metadata['icon-class']];
            xhtml += '<td><span class="glyphicon ' + classes.join(' ') + '"></span></td>';
            xhtml += '<td>' + Rplus.Realty.getDigest(r, true) + '</td>';
            xhtml += '</tr>';
            $('tbody', $modal).prepend(xhtml);
          }
          var h = 546 - $('tbody', $modal).height();
          if (h > 0) {
            var row_count = h / 34;
            for (var i = 0; i < row_count; i++) {
              dummy += '<tr>';
              dummy += '<td><span class="glyphicon"></span></td>';
              dummy += '<td></td>';
              dummy += '</tr>';
            }
            $('tbody', $modal).append(dummy);
          }
        });
    }
    
    return function (options) {
      if (!options) options = {};

      if (options.subscription_mode) {
        subscription_mode = options.subscription_mode;
      }
      // Set events
      events = {
        saved: options.saved,
        //loaded: options.loaded,
      };

      var $this = {
        // Methods
        create: function (skel) {
          if (!skel) skel = {};
          skel.id = null;
          setClientView(skel, 1, true);
          $modal.modal({show: true, backdrop: false});
          return $this;
        },

        open: function (id) {
          $.ajax({
            type: "GET",
            url: "/api/client/get",
            data: {id: id, with_subscriptions: true},
          })
            .done(function (data, textStatus, jqXHR) {
              selected_tag_id = data.color_tag_id;
              setClientView(data, 1, true);
              $modal.modal({show: true, backdrop: false});
            })
            .fail(function (jqXHR, textStatus, errorThrown) {
              alert('Error while fetching client data');
            })
          ;
          return $this;
        },

        findOrCreate: function (phoneNum) {
          $.ajax({
            type: "GET",
            url: "/api/client/get",
            data: {phone_num: phoneNum, with_subscriptions: true},
            success: function (data, textStatus, jqXHR) {
              setClientView(data, 1, true);
              $modal.modal({show: true, backdrop: false});
            },
            error: function (jqXHR, textStatus, errorThrown) {
              setClientView({
                phone_num: phoneNum, 
                //agent_id: '<%= $self->stash('user')->{id} %>',
              }, 1, true);
              $modal.modal({show: true, backdrop: false});
            },
          });
          return $this;
        },
        
        createWithSubscription: function (query, typeCode, realtyIds, agent_id) {
          var skel = {};
          skel.id = null;
          
          //skel.add_date = $self->format_datetime($client->add_date),
          skel.name = '';
          skel.phone_num = '';
          skel.email = '';
          skel.skype = '';
          skel.description = '';
          skel.agent_id = agent_id,
          skel.subscriptions = [];
          //skel.realty => []
          
          var subscription = {};
          subscription.offer_type_code = typeCode;
          subscription.queries = [query,];
          subscription.add_date = moment().format('YYYY-MM-DDTHH:mm:ssZZ');
          subscription.end_date = moment().add('days', 14).format('YYYY-MM-DDTHH:mm:ssZZ');
          subscription.realty_count = 0;
          subscription.realty_limit = 20;
          subscription.send_owner_phone = 0;
          subscription.color_tag_id = 0;
          subscription.realty = [];
          
          skel.subscriptions.push(subscription);
          
          setClientView(skel, 1, true);

          $modal.modal({show: true, backdrop: false});
          //$modal.modal('show');
          return $this;
        },

        close: function () {
          $modal.modal('toggle');
          return $this;
        }
      };

      return $this;
    }
  })();
</script>
% end

% content_for modals => begin

<div class="modal " id="clientCard_modal" role="dialog" tabindex="-1"  style="display: none;" data-focus-on="input:first" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header" id="client-card-header">
        <a href="#" class="ctrl-button emode-btn" data-dismiss="modal">Отменить</a>
        <a href="#" class="ctrl-button smode-btn hidden" data-action="client-cancel">Отменить</a>
        <a href="#" class="ctrl-button rmode-btn hidden" data-action="close-proposed"><span class="glyphicon glyphicon-arrow-left"></span>  Назад</a>
        <a href="#" class="ctrl-button pull-right smode-btn" data-action="client-unlock">Изменить</a>
        <a href="#" class="ctrl-button pull-right emode-btn hidden" data-action="client-save">Готово</a>
      </div>
      <div class="modal-body" id="client-card-body">
        
        <div id="proposed-realty-table" class="realty col-md-12 hidden" style="padding: 0px">
          <table style="margin-bottom: 0px;" class="table table-striped table-condensed" id="subscriptionRealtyTable">
            <thead></thead>
            <tbody></tbody>
          </table>
        </div>
        
        <div id="client-card" class="col-md-12" style="padding: 0px">
          <form role="form" id="clientCard_clientForm">
            <div class="input-group ccard-input-group hidden">
              <span class="ccard-input-group-addon glyphicon glyphicon-paperclip"></span>
              <input type="text" class="form-control text-input" name="id" id="clientCard_clientForm_inputId" placeholder="Id">
            </div>
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-user"></span>
              <input type="text" class="form-control text-input" name="name" id="clientCard_clientForm_inputName" placeholder="Имя">
            </div>
            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-earphone"></span>
              <input type="text" style="width: 365px !important;" class="form-control text-input" name="phone_num" id="clientCard_clientForm_inputPhoneNum" placeholder="Телефон"></input>
              <span id="phone-num-alert" style="color: red;" class="ccard-input-group-addon glyphicon glyp-big glyphicon-exclamation-sign hidden"></span>
            </div>
            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-envelope"></span>
              <input type="text" class="form-control text-input" name="email" placeholder="email">
            </div>
            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-cloud"></span>
              <input type="text" class="form-control text-input" name="skype" placeholder="skype">
            </div>
            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-pencil"></span>
              <input class="form-control text-input" id="clientCard_clientForm_inputDescription" name="description" rows="1" placeholder="Дополнительная информация"></textarea>
            </div>
            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-phone"></span>
              <span class="ccard-input-group-addon">Телефон собственника</span>
              <input class="" type="checkbox" id="phonecb" name="send_owner_phone" style="margin-top: 10px"></textarea>
            </div>

            <hr width="90%" align="right">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-user"></span>
              <select class="form-control input-sm" name="agent_id" id="agentInput" style="border: 0; box-shadow: 0 0 0 0; font-size: 14px;">
              %# check read (!) permission to prevent empty list
              % if (has_permission(clients => read => undef)) {
                <option class="text-muted" value="">-</option>
              % }
              % for my $x (@{Rplus::Model::User::Manager->get_objects(select => 'id, name', query => [role => ['agent', 'agent_ext', 'manager'], delete_date => undef], sort_by => 'name')}) {
                % if ($self->stash('user')->{role} eq 'manager' || $x->id == $self->stash('user')->{id}) {
                  <option value="<%= $x->id %>"><%= $x->name %></option>
                % } else {
                  <option disabled value="<%= $x->id %>"><%= $x->name %></option>
                % }
              % }
              </select>
            </div>

          </form>

          <div class="cardheader mainheader">
            <div class="input-group ccard-input-group">
              <span class="ccard-input-group-addon glyphicon glyphicon-tag"></span>
              <p>Тэги</p>
            </div>
          </div>
  
          <div class="tag-group input-group ccard-input-group">
            % for my $x (@{Rplus::Model::DictColorTag::Manager->get_objects(query => [delete_date => undef], sort_by => 'id')}) {
              <span class="round-button color-tag-<%= $x->id %>" data-action="subscription-set-color_tag_id" data-val="<%= $x->id %>"></span>
            % }
          </div>
  
          <div class="cardheader mainheader">
            <div class="input-group ccard-input-group">
              <span class="hidden ccard-input-group-addon glyphicon glyphicon-send"></span>
              <span class="ccard-input-group-addon smode-btn glyphicon glyp-big glyphicon-send"></span>
              <a href="#" class="ccard-input-group-addon emode-btn hidden" data-action="subscription-create"><span class="glyphicon glyp-big glyphicon-plus-sign text-success"></span></a>
              <p>Запросы клиента</p>
              <a href="#" style="padding-left: 225px;" class="ccard-input-group-addon ctrl-button emode invisible" data-action="subscription-type-change"><span id="subscription-type">Аренда</span></a>
            </div>
          </div>
  
          <form role="form" id="clientCard_subscriptionForm">
            <div class="subscription-container">
            </div>
          </form>
        </div>
      </div>
    </div>
  </div><!-- /.modal-body -->
</div><!-- /.modal -->
% end
